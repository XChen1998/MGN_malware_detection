@RCON = internal global [10 x i64] [i64 16777216, i64 33554432, i64 67108864, i64 134217728, i64 268435456, i64 536870912, i64 1073741824, i64 2147483648, i64 452984832, i64 905969664], align 16
@FSb = internal global [256 x i64] [i64 99, i64 124, i64 119, i64 123, i64 242, i64 107, i64 111, i64 197, i64 48, i64 1, i64 103, i64 43, i64 254, i64 215, i64 171, i64 118, i64 202, i64 130, i64 201, i64 125, i64 250, i64 89, i64 71, i64 240, i64 173, i64 212, i64 162, i64 175, i64 156, i64 164, i64 114, i64 192, i64 183, i64 253, i64 147, i64 38, i64 54, i64 63, i64 247, i64 204, i64 52, i64 165, i64 229, i64 241, i64 113, i64 216, i64 49, i64 21, i64 4, i64 199, i64 35, i64 195, i64 24, i64 150, i64 5, i64 154, i64 7, i64 18, i64 128, i64 226, i64 235, i64 39, i64 178, i64 117, i64 9, i64 131, i64 44, i64 26, i64 27, i64 110, i64 90, i64 160, i64 82, i64 59, i64 214, i64 179, i64 41, i64 227, i64 47, i64 132, i64 83, i64 209, i64 0, i64 237, i64 32, i64 252, i64 177, i64 91, i64 106, i64 203, i64 190, i64 57, i64 74, i64 76, i64 88, i64 207, i64 208, i64 239, i64 170, i64 251, i64 67, i64 77, i64 51, i64 133, i64 69, i64 249, i64 2, i64 127, i64 80, i64 60, i64 159, i64 168, i64 81, i64 163, i64 64, i64 143, i64 146, i64 157, i64 56, i64 245, i64 188, i64 182, i64 218, i64 33, i64 16, i64 255, i64 243, i64 210, i64 205, i64 12, i64 19, i64 236, i64 95, i64 151, i64 68, i64 23, i64 196, i64 167, i64 126, i64 61, i64 100, i64 93, i64 25, i64 115, i64 96, i64 129, i64 79, i64 220, i64 34, i64 42, i64 144, i64 136, i64 70, i64 238, i64 184, i64 20, i64 222, i64 94, i64 11, i64 219, i64 224, i64 50, i64 58, i64 10, i64 73, i64 6, i64 36, i64 92, i64 194, i64 211, i64 172, i64 98, i64 145, i64 149, i64 228, i64 121, i64 231, i64 200, i64 55, i64 109, i64 141, i64 213, i64 78, i64 169, i64 108, i64 86, i64 244, i64 234, i64 101, i64 122, i64 174, i64 8, i64 186, i64 120, i64 37, i64 46, i64 28, i64 166, i64 180, i64 198, i64 232, i64 221, i64 116, i64 31, i64 75, i64 189, i64 139, i64 138, i64 112, i64 62, i64 181, i64 102, i64 72, i64 3, i64 246, i64 14, i64 97, i64 53, i64 87, i64 185, i64 134, i64 193, i64 29, i64 158, i64 225, i64 248, i64 152, i64 17, i64 105, i64 217, i64 142, i64 148, i64 155, i64 30, i64 135, i64 233, i64 206, i64 85, i64 40, i64 223, i64 140, i64 161, i64 137, i64 13, i64 191, i64 230, i64 66, i64 104, i64 65, i64 153, i64 45, i64 15, i64 176, i64 84, i64 187, i64 22], align 16
@RT0 = internal global [256 x i64] [i64 1374988112, i64 2118214995, i64 437757123, i64 975658646, i64 1001089995, i64 530400753, i64 2902087851, i64 1273168787, i64 540080725, i64 2910219766, i64 2295101073, i64 4110568485, i64 1340463100, i64 3307916247, i64 641025152, i64 3043140495, i64 3736164937, i64 632953703, i64 1172967064, i64 1576976609, i64 3274667266, i64 2169303058, i64 2370213795, i64 1809054150, i64 59727847, i64 361929877, i64 3211623147, i64 2505202138, i64 3569255213, i64 1484005843, i64 1239443753, i64 2395588676, i64 1975683434, i64 4102977912, i64 2572697195, i64 666464733, i64 3202437046, i64 4035489047, i64 3374361702, i64 2110667444, i64 1675577880, i64 3843699074, i64 2538681184, i64 1649639237, i64 2976151520, i64 3144396420, i64 4269907996, i64 4178062228, i64 1883793496, i64 2403728665, i64 2497604743, i64 1383856311, i64 2876494627, i64 1917518562, i64 3810496343, i64 1716890410, i64 3001755655, i64 800440835, i64 2261089178, i64 3543599269, i64 807962610, i64 599762354, i64 33778362, i64 3977675356, i64 2328828971, i64 2809771154, i64 4077384432, i64 1315562145, i64 1708848333, i64 101039829, i64 3509871135, i64 3299278474, i64 875451293, i64 2733856160, i64 92987698, i64 2767645557, i64 193195065, i64 1080094634, i64 1584504582, i64 3178106961, i64 1042385657, i64 2531067453, i64 3711829422, i64 1306967366, i64 2438237621, i64 1908694277, i64 67556463, i64 1615861247, i64 429456164, i64 3602770327, i64 2302690252, i64 1742315127, i64 2968011453, i64 126454664, i64 3877198648, i64 2043211483, i64 2709260871, i64 2084704233, i64 4169408201, i64 0, i64 159417987, i64 841739592, i64 504459436, i64 1817866830, i64 4245618683, i64 260388950, i64 1034867998, i64 908933415, i64 168810852, i64 1750902305, i64 2606453969, i64 607530554, i64 202008497, i64 2472011535, i64 3035535058, i64 463180190, i64 2160117071, i64 1641816226, i64 1517767529, i64 470948374, i64 3801332234, i64 3231722213, i64 1008918595, i64 303765277, i64 235474187, i64 4069246893, i64 766945465, i64 337553864, i64 1475418501, i64 2943682380, i64 4003061179, i64 2743034109, i64 4144047775, i64 1551037884, i64 1147550661, i64 1543208500, i64 2336434550, i64 3408119516, i64 3069049960, i64 3102011747, i64 3610369226, i64 1113818384, i64 328671808, i64 2227573024, i64 2236228733, i64 3535486456, i64 2935566865, i64 3341394285, i64 496906059, i64 3702665459, i64 226906860, i64 2009195472, i64 733156972, i64 2842737049, i64 294930682, i64 1206477858, i64 2835123396, i64 2700099354, i64 1451044056, i64 573804783, i64 2269728455, i64 3644379585, i64 2362090238, i64 2564033334, i64 2801107407, i64 2776292904, i64 3669462566, i64 1068351396, i64 742039012, i64 1350078989, i64 1784663195, i64 1417561698, i64 4136440770, i64 2430122216, i64 775550814, i64 2193862645, i64 2673705150, i64 1775276924, i64 1876241833, i64 3475313331, i64 3366754619, i64 270040487, i64 3902563182, i64 3678124923, i64 3441850377, i64 1851332852, i64 3969562369, i64 2203032232, i64 3868552805, i64 2868897406, i64 566021896, i64 4011190502, i64 3135740889, i64 1248802510, i64 3936291284, i64 699432150, i64 832877231, i64 708780849, i64 3332740144, i64 899835584, i64 1951317047, i64 4236429990, i64 3767586992, i64 866637845, i64 4043610186, i64 1106041591, i64 2144161806, i64 395441711, i64 1984812685, i64 1139781709, i64 3433712980, i64 3835036895, i64 2664543715, i64 1282050075, i64 3240894392, i64 1181045119, i64 2640243204, i64 25965917, i64 4203181171, i64 4211818798, i64 3009879386, i64 2463879762, i64 3910161971, i64 1842759443, i64 2597806476, i64 933301370, i64 1509430414, i64 3943906441, i64 3467192302, i64 3076639029, i64 3776767469, i64 2051518780, i64 2631065433, i64 1441952575, i64 404016761, i64 1942435775, i64 1408749034, i64 1610459739, i64 3745345300, i64 2017778566, i64 3400528769, i64 3110650942, i64 941896748, i64 3265478751, i64 371049330, i64 3168937228, i64 675039627, i64 4279080257, i64 967311729, i64 135050206, i64 3635733660, i64 1683407248, i64 2076935265, i64 3576870512, i64 1215061108, i64 3501741890], align 16
@RT1 = internal global [256 x i64] [i64 1347548327, i64 1400783205, i64 3273267108, i64 2520393566, i64 3409685355, i64 4045380933, i64 2880240216, i64 2471224067, i64 1428173050, i64 4138563181, i64 2441661558, i64 636813900, i64 4233094615, i64 3620022987, i64 2149987652, i64 2411029155, i64 1239331162, i64 1730525723, i64 2554718734, i64 3781033664, i64 46346101, i64 310463728, i64 2743944855, i64 3328955385, i64 3875770207, i64 2501218972, i64 3955191162, i64 3667219033, i64 768917123, i64 3545789473, i64 692707433, i64 1150208456, i64 1786102409, i64 2029293177, i64 1805211710, i64 3710368113, i64 3065962831, i64 401639597, i64 1724457132, i64 3028143674, i64 409198410, i64 2196052529, i64 1620529459, i64 1164071807, i64 3769721975, i64 2226875310, i64 486441376, i64 2499348523, i64 1483753576, i64 428819965, i64 2274680428, i64 3075636216, i64 598438867, i64 3799141122, i64 1474502543, i64 711349675, i64 129166120, i64 53458370, i64 2592523643, i64 2782082824, i64 4063242375, i64 2988687269, i64 3120694122, i64 1559041666, i64 730517276, i64 2460449204, i64 4042459122, i64 2706270690, i64 3446004468, i64 3573941694, i64 533804130, i64 2328143614, i64 2637442643, i64 2695033685, i64 839224033, i64 1973745387, i64 957055980, i64 2856345839, i64 106852767, i64 1371368976, i64 4181598602, i64 1033297158, i64 2933734917, i64 1179510461, i64 3046200461, i64 91341917, i64 1862534868, i64 4284502037, i64 605657339, i64 2547432937, i64 3431546947, i64 2003294622, i64 3182487618, i64 2282195339, i64 954669403, i64 3682191598, i64 1201765386, i64 3917234703, i64 3388507166, i64 0, i64 2198438022, i64 1211247597, i64 2887651696, i64 1315723890, i64 4227665663, i64 1443857720, i64 507358933, i64 657861945, i64 1678381017, i64 560487590, i64 3516619604, i64 975451694, i64 2970356327, i64 261314535, i64 3535072918, i64 2652609425, i64 1333838021, i64 2724322336, i64 1767536459, i64 370938394, i64 182621114, i64 3854606378, i64 1128014560, i64 487725847, i64 185469197, i64 2918353863, i64 3106780840, i64 3356761769, i64 2237133081, i64 1286567175, i64 3152976349, i64 4255350624, i64 2683765030, i64 3160175349, i64 3309594171, i64 878443390, i64 1988838185, i64 3704300486, i64 1756818940, i64 1673061617, i64 3403100636, i64 272786309, i64 1075025698, i64 545572369, i64 2105887268, i64 4174560061, i64 296679730, i64 1841768865, i64 1260232239, i64 4091327024, i64 3960309330, i64 3497509347, i64 1814803222, i64 2578018489, i64 4195456072, i64 575138148, i64 3299409036, i64 446754879, i64 3629546796, i64 4011996048, i64 3347532110, i64 3252238545, i64 4270639778, i64 915985419, i64 3483825537, i64 681933534, i64 651868046, i64 2755636671, i64 3828103837, i64 223377554, i64 2607439820, i64 1649704518, i64 3270937875, i64 3901806776, i64 1580087799, i64 4118987695, i64 3198115200, i64 2087309459, i64 2842678573, i64 3016697106, i64 1003007129, i64 2802849917, i64 1860738147, i64 2077965243, i64 164439672, i64 4100872472, i64 32283319, i64 2827177882, i64 1709610350, i64 2125135846, i64 136428751, i64 3874428392, i64 3652904859, i64 3460984630, i64 3572145929, i64 3593056380, i64 2939266226, i64 824852259, i64 818324884, i64 3224740454, i64 930369212, i64 2801566410, i64 2967507152, i64 355706840, i64 1257309336, i64 4148292826, i64 243256656, i64 790073846, i64 2373340630, i64 1296297904, i64 1422699085, i64 3756299780, i64 3818836405, i64 457992840, i64 3099667487, i64 2135319889, i64 77422314, i64 1560382517, i64 1945798516, i64 788204353, i64 1521706781, i64 1385356242, i64 870912086, i64 325965383, i64 2358957921, i64 2050466060, i64 2388260884, i64 2313884476, i64 4006521127, i64 901210569, i64 3990953189, i64 1014646705, i64 1503449823, i64 1062597235, i64 2031621326, i64 3212035895, i64 3931371469, i64 1533017514, i64 350174575, i64 2256028891, i64 2177544179, i64 1052338372, i64 741876788, i64 1606591296, i64 1914052035, i64 213705253, i64 2334669897, i64 1107234197, i64 1899603969, i64 3725069491, i64 2631447780, i64 2422494913, i64 1635502980, i64 1893020342, i64 1950903388, i64 1120974935], align 16
@RT2 = internal global [256 x i64] [i64 2807058932, i64 1699970625, i64 2764249623, i64 1586903591, i64 1808481195, i64 1173430173, i64 1487645946, i64 59984867, i64 4199882800, i64 1844882806, i64 1989249228, i64 1277555970, i64 3623636965, i64 3419915562, i64 1149249077, i64 2744104290, i64 1514790577, i64 459744698, i64 244860394, i64 3235995134, i64 1963115311, i64 4027744588, i64 2544078150, i64 4190530515, i64 1608975247, i64 2627016082, i64 2062270317, i64 1507497298, i64 2200818878, i64 567498868, i64 1764313568, i64 3359936201, i64 2305455554, i64 2037970062, i64 1047239000, i64 1910319033, i64 1337376481, i64 2904027272, i64 2892417312, i64 984907214, i64 1243112415, i64 830661914, i64 861968209, i64 2135253587, i64 2011214180, i64 2927934315, i64 2686254721, i64 731183368, i64 1750626376, i64 4246310725, i64 1820824798, i64 4172763771, i64 3542330227, i64 48394827, i64 2404901663, i64 2871682645, i64 671593195, i64 3254988725, i64 2073724613, i64 145085239, i64 2280796200, i64 2779915199, i64 1790575107, i64 2187128086, i64 472615631, i64 3029510009, i64 4075877127, i64 3802222185, i64 4107101658, i64 3201631749, i64 1646252340, i64 4270507174, i64 1402811438, i64 1436590835, i64 3778151818, i64 3950355702, i64 3963161475, i64 4020912224, i64 2667994737, i64 273792366, i64 2331590177, i64 104699613, i64 95345982, i64 3175501286, i64 2377486676, i64 1560637892, i64 3564045318, i64 369057872, i64 4213447064, i64 3919042237, i64 1137477952, i64 2658625497, i64 1119727848, i64 2340947849, i64 1530455833, i64 4007360968, i64 172466556, i64 266959938, i64 516552836, i64 0, i64 2256734592, i64 3980931627, i64 1890328081, i64 1917742170, i64 4294704398, i64 945164165, i64 3575528878, i64 958871085, i64 3647212047, i64 2787207260, i64 1423022939, i64 775562294, i64 1739656202, i64 3876557655, i64 2530391278, i64 2443058075, i64 3310321856, i64 547512796, i64 1265195639, i64 437656594, i64 3121275539, i64 719700128, i64 3762502690, i64 387781147, i64 218828297, i64 3350065803, i64 2830708150, i64 2848461854, i64 428169201, i64 122466165, i64 3720081049, i64 1627235199, i64 648017665, i64 4122762354, i64 1002783846, i64 2117360635, i64 695634755, i64 3336358691, i64 4234721005, i64 4049844452, i64 3704280881, i64 2232435299, i64 574624663, i64 287343814, i64 612205898, i64 1039717051, i64 840019705, i64 2708326185, i64 793451934, i64 821288114, i64 1391201670, i64 3822090177, i64 376187827, i64 3113855344, i64 1224348052, i64 1679968233, i64 2361698556, i64 1058709744, i64 752375421, i64 2431590963, i64 1321699145, i64 3519142200, i64 2734591178, i64 188127444, i64 2177869557, i64 3727205754, i64 2384911031, i64 3215212461, i64 2648976442, i64 2450346104, i64 3432737375, i64 1180849278, i64 331544205, i64 3102249176, i64 4150144569, i64 2952102595, i64 2159976285, i64 2474404304, i64 766078933, i64 313773861, i64 2570832044, i64 2108100632, i64 1668212892, i64 3145456443, i64 2013908262, i64 418672217, i64 3070356634, i64 2594734927, i64 1852171925, i64 3867060991, i64 3473416636, i64 3907448597, i64 2614737639, i64 919489135, i64 164948639, i64 2094410160, i64 2997825956, i64 590424639, i64 2486224549, i64 1723872674, i64 3157750862, i64 3399941250, i64 3501252752, i64 3625268135, i64 2555048196, i64 3673637356, i64 1343127501, i64 4130281361, i64 3599595085, i64 2957853679, i64 1297403050, i64 81781910, i64 3051593425, i64 2283490410, i64 532201772, i64 1367295589, i64 3926170974, i64 895287692, i64 1953757831, i64 1093597963, i64 492483431, i64 3528626907, i64 1446242576, i64 1192455638, i64 1636604631, i64 209336225, i64 344873464, i64 1015671571, i64 669961897, i64 3375740769, i64 3857572124, i64 2973530695, i64 3747192018, i64 1933530610, i64 3464042516, i64 935293895, i64 3454686199, i64 2858115069, i64 1863638845, i64 3683022916, i64 4085369519, i64 3292445032, i64 875313188, i64 1080017571, i64 3279033885, i64 621591778, i64 1233856572, i64 2504130317, i64 24197544, i64 3017672716, i64 3835484340, i64 3247465558, i64 2220981195, i64 3060847922, i64 1551124588, i64 1463996600], align 16
@RT3 = internal global [256 x i64] [i64 4104605777, i64 1097159550, i64 396673818, i64 660510266, i64 2875968315, i64 2638606623, i64 4200115116, i64 3808662347, i64 821712160, i64 1986918061, i64 3430322568, i64 38544885, i64 3856137295, i64 718002117, i64 893681702, i64 1654886325, i64 2975484382, i64 3122358053, i64 3926825029, i64 4274053469, i64 796197571, i64 1290801793, i64 1184342925, i64 3556361835, i64 2405426947, i64 2459735317, i64 1836772287, i64 1381620373, i64 3196267988, i64 1948373848, i64 3764988233, i64 3385345166, i64 3263785589, i64 2390325492, i64 1480485785, i64 3111247143, i64 3780097726, i64 2293045232, i64 548169417, i64 3459953789, i64 3746175075, i64 439452389, i64 1362321559, i64 1400849762, i64 1685577905, i64 1806599355, i64 2174754046, i64 137073913, i64 1214797936, i64 1174215055, i64 3731654548, i64 2079897426, i64 1943217067, i64 1258480242, i64 529487843, i64 1437280870, i64 3945269170, i64 3049390895, i64 3313212038, i64 923313619, i64 679998000, i64 3215307299, i64 57326082, i64 377642221, i64 3474729866, i64 2041877159, i64 133361907, i64 1776460110, i64 3673476453, i64 96392454, i64 878845905, i64 2801699524, i64 777231668, i64 4082475170, i64 2330014213, i64 4142626212, i64 2213296395, i64 1626319424, i64 1906247262, i64 1846563261, i64 562755902, i64 3708173718, i64 1040559837, i64 3871163981, i64 1418573201, i64 3294430577, i64 114585348, i64 1343618912, i64 2566595609, i64 3186202582, i64 1078185097, i64 3651041127, i64 3896688048, i64 2307622919, i64 425408743, i64 3371096953, i64 2081048481, i64 1108339068, i64 2216610296, i64 0, i64 2156299017, i64 736970802, i64 292596766, i64 1517440620, i64 251657213, i64 2235061775, i64 2933202493, i64 758720310, i64 265905162, i64 1554391400, i64 1532285339, i64 908999204, i64 174567692, i64 1474760595, i64 4002861748, i64 2610011675, i64 3234156416, i64 3693126241, i64 2001430874, i64 303699484, i64 2478443234, i64 2687165888, i64 585122620, i64 454499602, i64 151849742, i64 2345119218, i64 3064510765, i64 514443284, i64 4044981591, i64 1963412655, i64 2581445614, i64 2137062819, i64 19308535, i64 1928707164, i64 1715193156, i64 4219352155, i64 1126790795, i64 600235211, i64 3992742070, i64 3841024952, i64 836553431, i64 1669664834, i64 2535604243, i64 3323011204, i64 1243905413, i64 3141400786, i64 4180808110, i64 698445255, i64 2653899549, i64 2989552604, i64 2253581325, i64 3252932727, i64 3004591147, i64 1891211689, i64 2487810577, i64 3915653703, i64 4237083816, i64 4030667424, i64 2100090966, i64 865136418, i64 1229899655, i64 953270745, i64 3399679628, i64 3557504664, i64 4118925222, i64 2061379749, i64 3079546586, i64 2915017791, i64 983426092, i64 2022837584, i64 1607244650, i64 2118541908, i64 2366882550, i64 3635996816, i64 972512814, i64 3283088770, i64 1568718495, i64 3499326569, i64 3576539503, i64 621982671, i64 2895723464, i64 410887952, i64 2623762152, i64 1002142683, i64 645401037, i64 1494807662, i64 2595684844, i64 1335535747, i64 2507040230, i64 4293295786, i64 3167684641, i64 367585007, i64 3885750714, i64 1865862730, i64 2668221674, i64 2960971305, i64 2763173681, i64 1059270954, i64 2777952454, i64 2724642869, i64 1320957812, i64 2194319100, i64 2429595872, i64 2815956275, i64 77089521, i64 3973773121, i64 3444575871, i64 2448830231, i64 1305906550, i64 4021308739, i64 2857194700, i64 2516901860, i64 3518358430, i64 1787304780, i64 740276417, i64 1699839814, i64 1592394909, i64 2352307457, i64 2272556026, i64 188821243, i64 1729977011, i64 3687994002, i64 274084841, i64 3594982253, i64 3613494426, i64 2701949495, i64 4162096729, i64 322734571, i64 2837966542, i64 1640576439, i64 484830689, i64 1202797690, i64 3537852828, i64 4067639125, i64 349075736, i64 3342319475, i64 4157467219, i64 4255800159, i64 1030690015, i64 1155237496, i64 2951971274, i64 1757691577, i64 607398968, i64 2738905026, i64 499347990, i64 3794078908, i64 1011452712, i64 227885567, i64 2818666809, i64 213114376, i64 3034881240, i64 1455525988, i64 3414450555, i64 850817237, i64 1817998408, i64 3092726480], align 16
@FT0 = internal global [256 x i64] [i64 3328402341, i64 4168907908, i64 4000806809, i64 4135287693, i64 4294111757, i64 3597364157, i64 3731845041, i64 2445657428, i64 1613770832, i64 33620227, i64 3462883241, i64 1445669757, i64 3892248089, i64 3050821474, i64 1303096294, i64 3967186586, i64 2412431941, i64 528646813, i64 2311702848, i64 4202528135, i64 4026202645, i64 2992200171, i64 2387036105, i64 4226871307, i64 1101901292, i64 3017069671, i64 1604494077, i64 1169141738, i64 597466303, i64 1403299063, i64 3832705686, i64 2613100635, i64 1974974402, i64 3791519004, i64 1033081774, i64 1277568618, i64 1815492186, i64 2118074177, i64 4126668546, i64 2211236943, i64 1748251740, i64 1369810420, i64 3521504564, i64 4193382664, i64 3799085459, i64 2883115123, i64 1647391059, i64 706024767, i64 134480908, i64 2512897874, i64 1176707941, i64 2646852446, i64 806885416, i64 932615841, i64 168101135, i64 798661301, i64 235341577, i64 605164086, i64 461406363, i64 3756188221, i64 3454790438, i64 1311188841, i64 2142417613, i64 3933566367, i64 302582043, i64 495158174, i64 1479289972, i64 874125870, i64 907746093, i64 3698224818, i64 3025820398, i64 1537253627, i64 2756858614, i64 1983593293, i64 3084310113, i64 2108928974, i64 1378429307, i64 3722699582, i64 1580150641, i64 327451799, i64 2790478837, i64 3117535592, i64 0, i64 3253595436, i64 1075847264, i64 3825007647, i64 2041688520, i64 3059440621, i64 3563743934, i64 2378943302, i64 1740553945, i64 1916352843, i64 2487896798, i64 2555137236, i64 2958579944, i64 2244988746, i64 3151024235, i64 3320835882, i64 1336584933, i64 3992714006, i64 2252555205, i64 2588757463, i64 1714631509, i64 293963156, i64 2319795663, i64 3925473552, i64 67240454, i64 4269768577, i64 2689618160, i64 2017213508, i64 631218106, i64 1269344483, i64 2723238387, i64 1571005438, i64 2151694528, i64 93294474, i64 1066570413, i64 563977660, i64 1882732616, i64 4059428100, i64 1673313503, i64 2008463041, i64 2950355573, i64 1109467491, i64 537923632, i64 3858759450, i64 4260623118, i64 3218264685, i64 2177748300, i64 403442708, i64 638784309, i64 3287084079, i64 3193921505, i64 899127202, i64 2286175436, i64 773265209, i64 2479146071, i64 1437050866, i64 4236148354, i64 2050833735, i64 3362022572, i64 3126681063, i64 840505643, i64 3866325909, i64 3227541664, i64 427917720, i64 2655997905, i64 2749160575, i64 1143087718, i64 1412049534, i64 999329963, i64 193497219, i64 2353415882, i64 3354324521, i64 1807268051, i64 672404540, i64 2816401017, i64 3160301282, i64 369822493, i64 2916866934, i64 3688947771, i64 1681011286, i64 1949973070, i64 336202270, i64 2454276571, i64 201721354, i64 1210328172, i64 3093060836, i64 2680341085, i64 3184776046, i64 1135389935, i64 3294782118, i64 965841320, i64 831886756, i64 3554993207, i64 4068047243, i64 3588745010, i64 2345191491, i64 1849112409, i64 3664604599, i64 26054028, i64 2983581028, i64 2622377682, i64 1235855840, i64 3630984372, i64 2891339514, i64 4092916743, i64 3488279077, i64 3395642799, i64 4101667470, i64 1202630377, i64 268961816, i64 1874508501, i64 4034427016, i64 1243948399, i64 1546530418, i64 941366308, i64 1470539505, i64 1941222599, i64 2546386513, i64 3421038627, i64 2715671932, i64 3899946140, i64 1042226977, i64 2521517021, i64 1639824860, i64 227249030, i64 260737669, i64 3765465232, i64 2084453954, i64 1907733956, i64 3429263018, i64 2420656344, i64 100860677, i64 4160157185, i64 470683154, i64 3261161891, i64 1781871967, i64 2924959737, i64 1773779408, i64 394692241, i64 2579611992, i64 974986535, i64 664706745, i64 3655459128, i64 3958962195, i64 731420851, i64 571543859, i64 3530123707, i64 2849626480, i64 126783113, i64 865375399, i64 765172662, i64 1008606754, i64 361203602, i64 3387549984, i64 2278477385, i64 2857719295, i64 1344809080, i64 2782912378, i64 59542671, i64 1503764984, i64 160008576, i64 437062935, i64 1707065306, i64 3622233649, i64 2218934982, i64 3496503480, i64 2185314755, i64 697932208, i64 1512910199, i64 504303377, i64 2075177163, i64 2824099068, i64 1841019862, i64 739644986], align 16
@FT1 = internal global [256 x i64] [i64 2781242211, i64 2230877308, i64 2582542199, i64 2381740923, i64 234877682, i64 3184946027, i64 2984144751, i64 1418839493, i64 1348481072, i64 50462977, i64 2848876391, i64 2102799147, i64 434634494, i64 1656084439, i64 3863849899, i64 2599188086, i64 1167051466, i64 2636087938, i64 1082771913, i64 2281340285, i64 368048890, i64 3954334041, i64 3381544775, i64 201060592, i64 3963727277, i64 1739838676, i64 4250903202, i64 3930435503, i64 3206782108, i64 4149453988, i64 2531553906, i64 1536934080, i64 3262494647, i64 484572669, i64 2923271059, i64 1783375398, i64 1517041206, i64 1098792767, i64 49674231, i64 1334037708, i64 1550332980, i64 4098991525, i64 886171109, i64 150598129, i64 2481090929, i64 1940642008, i64 1398944049, i64 1059722517, i64 201851908, i64 1385547719, i64 1699095331, i64 1587397571, i64 674240536, i64 2704774806, i64 252314885, i64 3039795866, i64 151914247, i64 908333586, i64 2602270848, i64 1038082786, i64 651029483, i64 1766729511, i64 3447698098, i64 2682942837, i64 454166793, i64 2652734339, i64 1951935532, i64 775166490, i64 758520603, i64 3000790638, i64 4004797018, i64 4217086112, i64 4137964114, i64 1299594043, i64 1639438038, i64 3464344499, i64 2068982057, i64 1054729187, i64 1901997871, i64 2534638724, i64 4121318227, i64 1757008337, i64 0, i64 750906861, i64 1614815264, i64 535035132, i64 3363418545, i64 3988151131, i64 3201591914, i64 1183697867, i64 3647454910, i64 1265776953, i64 3734260298, i64 3566750796, i64 3903871064, i64 1250283471, i64 1807470800, i64 717615087, i64 3847203498, i64 384695291, i64 3313910595, i64 3617213773, i64 1432761139, i64 2484176261, i64 3481945413, i64 283769337, i64 100925954, i64 2180939647, i64 4037038160, i64 1148730428, i64 3123027871, i64 3813386408, i64 4087501137, i64 4267549603, i64 3229630528, i64 2315620239, i64 2906624658, i64 3156319645, i64 1215313976, i64 82966005, i64 3747855548, i64 3245848246, i64 1974459098, i64 1665278241, i64 807407632, i64 451280895, i64 251524083, i64 1841287890, i64 1283575245, i64 337120268, i64 891687699, i64 801369324, i64 3787349855, i64 2721421207, i64 3431482436, i64 959321879, i64 1469301956, i64 4065699751, i64 2197585534, i64 1199193405, i64 2898814052, i64 3887750493, i64 724703513, i64 2514908019, i64 2696962144, i64 2551808385, i64 3516813135, i64 2141445340, i64 1715741218, i64 2119445034, i64 2872807568, i64 2198571144, i64 3398190662, i64 700968686, i64 3547052216, i64 1009259540, i64 2041044702, i64 3803995742, i64 487983883, i64 1991105499, i64 1004265696, i64 1449407026, i64 1316239930, i64 504629770, i64 3683797321, i64 168560134, i64 1816667172, i64 3837287516, i64 1570751170, i64 1857934291, i64 4014189740, i64 2797888098, i64 2822345105, i64 2754712981, i64 936633572, i64 2347923833, i64 852879335, i64 1133234376, i64 1500395319, i64 3084545389, i64 2348912013, i64 1689376213, i64 3533459022, i64 3762923945, i64 3034082412, i64 4205598294, i64 133428468, i64 634383082, i64 2949277029, i64 2398386810, i64 3913789102, i64 403703816, i64 3580869306, i64 2297460856, i64 1867130149, i64 1918643758, i64 607656988, i64 4049053350, i64 3346248884, i64 1368901318, i64 600565992, i64 2090982877, i64 2632479860, i64 557719327, i64 3717614411, i64 3697393085, i64 2249034635, i64 2232388234, i64 2430627952, i64 1115438654, i64 3295786421, i64 2865522278, i64 3633334344, i64 84280067, i64 33027830, i64 303828494, i64 2747425121, i64 1600795957, i64 4188952407, i64 3496589753, i64 2434238086, i64 1486471617, i64 658119965, i64 3106381470, i64 953803233, i64 334231800, i64 3005978776, i64 857870609, i64 3151128937, i64 1890179545, i64 2298973838, i64 2805175444, i64 3056442267, i64 574365214, i64 2450884487, i64 550103529, i64 1233637070, i64 4289353045, i64 2018519080, i64 2057691103, i64 2399374476, i64 4166623649, i64 2148108681, i64 387583245, i64 3664101311, i64 836232934, i64 3330556482, i64 3100665960, i64 3280093505, i64 2955516313, i64 2002398509, i64 287182607, i64 3413881008, i64 4238890068, i64 3597515707, i64 975967766], align 16
@FT2 = internal global [256 x i64] [i64 1671808611, i64 2089089148, i64 2006576759, i64 2072901243, i64 4061003762, i64 1807603307, i64 1873927791, i64 3310653893, i64 810573872, i64 16974337, i64 1739181671, i64 729634347, i64 4263110654, i64 3613570519, i64 2883997099, i64 1989864566, i64 3393556426, i64 2191335298, i64 3376449993, i64 2106063485, i64 4195741690, i64 1508618841, i64 1204391495, i64 4027317232, i64 2917941677, i64 3563566036, i64 2734514082, i64 2951366063, i64 2629772188, i64 2767672228, i64 1922491506, i64 3227229120, i64 3082974647, i64 4246528509, i64 2477669779, i64 644500518, i64 911895606, i64 1061256767, i64 4144166391, i64 3427763148, i64 878471220, i64 2784252325, i64 3845444069, i64 4043897329, i64 1905517169, i64 3631459288, i64 827548209, i64 356461077, i64 67897348, i64 3344078279, i64 593839651, i64 3277757891, i64 405286936, i64 2527147926, i64 84871685, i64 2595565466, i64 118033927, i64 305538066, i64 2157648768, i64 3795705826, i64 3945188843, i64 661212711, i64 2999812018, i64 1973414517, i64 152769033, i64 2208177539, i64 745822252, i64 439235610, i64 455947803, i64 1857215598, i64 1525593178, i64 2700827552, i64 1391895634, i64 994932283, i64 3596728278, i64 3016654259, i64 695947817, i64 3812548067, i64 795958831, i64 2224493444, i64 1408607827, i64 3513301457, i64 0, i64 3979133421, i64 543178784, i64 4229948412, i64 2982705585, i64 1542305371, i64 1790891114, i64 3410398667, i64 3201918910, i64 961245753, i64 1256100938, i64 1289001036, i64 1491644504, i64 3477767631, i64 3496721360, i64 4012557807, i64 2867154858, i64 4212583931, i64 1137018435, i64 1305975373, i64 861234739, i64 2241073541, i64 1171229253, i64 4178635257, i64 33948674, i64 2139225727, i64 1357946960, i64 1011120188, i64 2679776671, i64 2833468328, i64 1374921297, i64 2751356323, i64 1086357568, i64 2408187279, i64 2460827538, i64 2646352285, i64 944271416, i64 4110742005, i64 3168756668, i64 3066132406, i64 3665145818, i64 560153121, i64 271589392, i64 4279952895, i64 4077846003, i64 3530407890, i64 3444343245, i64 202643468, i64 322250259, i64 3962553324, i64 1608629855, i64 2543990167, i64 1154254916, i64 389623319, i64 3294073796, i64 2817676711, i64 2122513534, i64 1028094525, i64 1689045092, i64 1575467613, i64 422261273, i64 1939203699, i64 1621147744, i64 2174228865, i64 1339137615, i64 3699352540, i64 577127458, i64 712922154, i64 2427141008, i64 2290289544, i64 1187679302, i64 3995715566, i64 3100863416, i64 339486740, i64 3732514782, i64 1591917662, i64 186455563, i64 3681988059, i64 3762019296, i64 844522546, i64 978220090, i64 169743370, i64 1239126601, i64 101321734, i64 611076132, i64 1558493276, i64 3260915650, i64 3547250131, i64 2901361580, i64 1655096418, i64 2443721105, i64 2510565781, i64 3828863972, i64 2039214713, i64 3878868455, i64 3359869896, i64 928607799, i64 1840765549, i64 2374762893, i64 3580146133, i64 1322425422, i64 2850048425, i64 1823791212, i64 1459268694, i64 4094161908, i64 3928346602, i64 1706019429, i64 2056189050, i64 2934523822, i64 135794696, i64 3134549946, i64 2022240376, i64 628050469, i64 779246638, i64 472135708, i64 2800834470, i64 3032970164, i64 3327236038, i64 3894660072, i64 3715932637, i64 1956440180, i64 522272287, i64 1272813131, i64 3185336765, i64 2340818315, i64 2323976074, i64 1888542832, i64 1044544574, i64 3049550261, i64 1722469478, i64 1222152264, i64 50660867, i64 4127324150, i64 236067854, i64 1638122081, i64 895445557, i64 1475980887, i64 3117443513, i64 2257655686, i64 3243809217, i64 489110045, i64 2662934430, i64 3778599393, i64 4162055160, i64 2561878936, i64 288563729, i64 1773916777, i64 3648039385, i64 2391345038, i64 2493985684, i64 2612407707, i64 505560094, i64 2274497927, i64 3911240169, i64 3460925390, i64 1442818645, i64 678973480, i64 3749357023, i64 2358182796, i64 2717407649, i64 2306869641, i64 219617805, i64 3218761151, i64 3862026214, i64 1120306242, i64 1756942440, i64 1103331905, i64 2578459033, i64 762796589, i64 252780047, i64 2966125488, i64 1425844308, i64 3151392187, i64 372911126], align 16
@FT3 = internal global [256 x i64] [i64 1667474886, i64 2088535288, i64 2004326894, i64 2071694838, i64 4075949567, i64 1802223062, i64 1869591006, i64 3318043793, i64 808472672, i64 16843522, i64 1734846926, i64 724270422, i64 4278065639, i64 3621216949, i64 2880169549, i64 1987484396, i64 3402253711, i64 2189597983, i64 3385409673, i64 2105378810, i64 4210693615, i64 1499065266, i64 1195886990, i64 4042263547, i64 2913856577, i64 3570689971, i64 2728590687, i64 2947541573, i64 2627518243, i64 2762274643, i64 1920112356, i64 3233831835, i64 3082273397, i64 4261223649, i64 2475929149, i64 640051788, i64 909531756, i64 1061110142, i64 4160160501, i64 3435941763, i64 875846760, i64 2779116625, i64 3857003729, i64 4059105529, i64 1903268834, i64 3638064043, i64 825316194, i64 353713962, i64 67374088, i64 3351728789, i64 589522246, i64 3284360861, i64 404236336, i64 2526454071, i64 84217610, i64 2593830191, i64 117901582, i64 303183396, i64 2155911963, i64 3806477791, i64 3958056653, i64 656894286, i64 2998062463, i64 1970642922, i64 151591698, i64 2206440989, i64 741110872, i64 437923380, i64 454765878, i64 1852748508, i64 1515908788, i64 2694904667, i64 1381168804, i64 993742198, i64 3604373943, i64 3014905469, i64 690584402, i64 3823320797, i64 791638366, i64 2223281939, i64 1398011302, i64 3520161977, i64 0, i64 3991743681, i64 538992704, i64 4244381667, i64 2981218425, i64 1532751286, i64 1785380564, i64 3419096717, i64 3200178535, i64 960056178, i64 1246420628, i64 1280103576, i64 1482221744, i64 3486468741, i64 3503319995, i64 4025428677, i64 2863326543, i64 4227536621, i64 1128514950, i64 1296947098, i64 859002214, i64 2240123921, i64 1162203018, i64 4193849577, i64 33687044, i64 2139062782, i64 1347481760, i64 1010582648, i64 2678045221, i64 2829640523, i64 1364325282, i64 2745433693, i64 1077985408, i64 2408548869, i64 2459086143, i64 2644360225, i64 943212656, i64 4126475505, i64 3166494563, i64 3065430391, i64 3671750063, i64 555836226, i64 269496352, i64 4294908645, i64 4092792573, i64 3537006015, i64 3452783745, i64 202118168, i64 320025894, i64 3974901699, i64 1600119230, i64 2543297077, i64 1145359496, i64 387397934, i64 3301201811, i64 2812801621, i64 2122220284, i64 1027426170, i64 1684319432, i64 1566435258, i64 421079858, i64 1936954854, i64 1616945344, i64 2172753945, i64 1330631070, i64 3705438115, i64 572679748, i64 707427924, i64 2425400123, i64 2290647819, i64 1179044492, i64 4008585671, i64 3099120491, i64 336870440, i64 3739122087, i64 1583276732, i64 185277718, i64 3688593069, i64 3772791771, i64 842159716, i64 976899700, i64 168435220, i64 1229577106, i64 101059084, i64 606366792, i64 1549591736, i64 3267517855, i64 3553849021, i64 2897014595, i64 1650632388, i64 2442242105, i64 2509612081, i64 3840161747, i64 2038008818, i64 3890688725, i64 3368567691, i64 926374254, i64 1835907034, i64 2374863873, i64 3587531953, i64 1313788572, i64 2846482505, i64 1819063512, i64 1448540844, i64 4109633523, i64 3941213647, i64 1701162954, i64 2054852340, i64 2930698567, i64 134748176, i64 3132806511, i64 2021165296, i64 623210314, i64 774795868, i64 471606328, i64 2795958615, i64 3031746419, i64 3334885783, i64 3907527627, i64 3722280097, i64 1953799400, i64 522133822, i64 1263263126, i64 3183336545, i64 2341176845, i64 2324333839, i64 1886425312, i64 1044267644, i64 3048588401, i64 1718004428, i64 1212733584, i64 50529542, i64 4143317495, i64 235803164, i64 1633788866, i64 892690282, i64 1465383342, i64 3115962473, i64 2256965911, i64 3250673817, i64 488449850, i64 2661202215, i64 3789633753, i64 4177007595, i64 2560144171, i64 286339874, i64 1768537042, i64 3654906025, i64 2391705863, i64 2492770099, i64 2610673197, i64 505291324, i64 2273808917, i64 3924369609, i64 3469625735, i64 1431699370, i64 673740880, i64 3755965093, i64 2358021891, i64 2711746649, i64 2307489801, i64 218961690, i64 3217021541, i64 3873845719, i64 1111672452, i64 1751693520, i64 1094828930, i64 2576986153, i64 757954394, i64 252645662, i64 2964376443, i64 1414855848, i64 3149649517, i64 370555436], align 16
@RSb = internal global [256 x i64] [i64 82, i64 9, i64 106, i64 213, i64 48, i64 54, i64 165, i64 56, i64 191, i64 64, i64 163, i64 158, i64 129, i64 243, i64 215, i64 251, i64 124, i64 227, i64 57, i64 130, i64 155, i64 47, i64 255, i64 135, i64 52, i64 142, i64 67, i64 68, i64 196, i64 222, i64 233, i64 203, i64 84, i64 123, i64 148, i64 50, i64 166, i64 194, i64 35, i64 61, i64 238, i64 76, i64 149, i64 11, i64 66, i64 250, i64 195, i64 78, i64 8, i64 46, i64 161, i64 102, i64 40, i64 217, i64 36, i64 178, i64 118, i64 91, i64 162, i64 73, i64 109, i64 139, i64 209, i64 37, i64 114, i64 248, i64 246, i64 100, i64 134, i64 104, i64 152, i64 22, i64 212, i64 164, i64 92, i64 204, i64 93, i64 101, i64 182, i64 146, i64 108, i64 112, i64 72, i64 80, i64 253, i64 237, i64 185, i64 218, i64 94, i64 21, i64 70, i64 87, i64 167, i64 141, i64 157, i64 132, i64 144, i64 216, i64 171, i64 0, i64 140, i64 188, i64 211, i64 10, i64 247, i64 228, i64 88, i64 5, i64 184, i64 179, i64 69, i64 6, i64 208, i64 44, i64 30, i64 143, i64 202, i64 63, i64 15, i64 2, i64 193, i64 175, i64 189, i64 3, i64 1, i64 19, i64 138, i64 107, i64 58, i64 145, i64 17, i64 65, i64 79, i64 103, i64 220, i64 234, i64 151, i64 242, i64 207, i64 206, i64 240, i64 180, i64 230, i64 115, i64 150, i64 172, i64 116, i64 34, i64 231, i64 173, i64 53, i64 133, i64 226, i64 249, i64 55, i64 232, i64 28, i64 117, i64 223, i64 110, i64 71, i64 241, i64 26, i64 113, i64 29, i64 41, i64 197, i64 137, i64 111, i64 183, i64 98, i64 14, i64 170, i64 24, i64 190, i64 27, i64 252, i64 86, i64 62, i64 75, i64 198, i64 210, i64 121, i64 32, i64 154, i64 219, i64 192, i64 254, i64 120, i64 205, i64 90, i64 244, i64 31, i64 221, i64 168, i64 51, i64 136, i64 7, i64 199, i64 49, i64 177, i64 18, i64 16, i64 89, i64 39, i64 128, i64 236, i64 95, i64 96, i64 81, i64 127, i64 169, i64 25, i64 181, i64 74, i64 13, i64 45, i64 229, i64 122, i64 159, i64 147, i64 201, i64 156, i64 239, i64 160, i64 224, i64 59, i64 77, i64 174, i64 42, i64 245, i64 176, i64 200, i64 235, i64 187, i64 60, i64 131, i64 83, i64 153, i64 97, i64 23, i64 43, i64 4, i64 126, i64 186, i64 119, i64 214, i64 38, i64 225, i64 105, i64 20, i64 99, i64 85, i64 33, i64 12, i64 125], align 16
  %8 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %9 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %8, i32 0, i32 0
  store i32 10, i32* %9, align 8
  %12 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %13 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %12, i32 0, i32 0
  store i32 12, i32* %13, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  store i32 1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.aes_context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %RK = alloca i64*, align 8
  store %struct.aes_context* %ctx, %struct.aes_context** %2, align 8
  store i8* %key, i8** %3, align 8
  store i32 %nbits, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %15 [
    i32 128, label %6
    i32 192, label %9
    i32 256, label %12
  ]
  %22 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %23 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %22, i32 0, i32 1
  %24 = getelementptr inbounds [64 x i64], [64 x i64]* %23, i32 0, i32 0
  store i64* %24, i64** %RK, align 8
  store i32 0, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %4, align 4
  %29 = ashr i32 %28, 5
  %30 = icmp slt i32 %27, %29
  %33 = load i32, i32* %i, align 4
  %34 = mul nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl i64 %39, 24
  %41 = load i32, i32* %i, align 4
  %42 = mul nsw i32 %41, 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl i64 %48, 16
  %50 = or i64 %40, %49
  %51 = load i32, i32* %i, align 4
  %52 = mul nsw i32 %51, 4
  %53 = add nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl i64 %58, 8
  %60 = or i64 %50, %59
  %61 = load i32, i32* %i, align 4
  %62 = mul nsw i32 %61, 4
  %63 = add nsw i32 %62, 3
  %64 = sext i32 %63 to i64
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %60, %68
  %70 = load i32, i32* %i, align 4
  %71 = sext i32 %70 to i64
  %72 = load i64*, i64** %RK, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 %69, i64* %73, align 8
  %16 = load %struct.aes_context*, %struct.aes_context** %2, align 8
  %17 = getelementptr inbounds %struct.aes_context, %struct.aes_context* %16, i32 0, i32 0
  store i32 14, i32* %17, align 8
  %76 = load i32, i32* %i, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %i, align 4
