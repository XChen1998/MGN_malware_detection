@key = internal global i32 -526070826, align 4
@entry_list = common global [24 x %struct.entry] zeroinitializer, align 16
@enc_table = internal global [66 x i8] c"\14\15\0A\1D\1F\08\0E\00\01\17\1A\03\0B\09\16\12\1E\10\0C\0D\18\1B\0F\11\1C\13-?(648<:15 7,=./3+!0>2#*;)na`iklmhojd\19\07}", align 16
@dec_table = internal global [66 x i8] c"\18\1B\1A\1D\1C\1F\1E\11\10\13\12\15\14\17\16\09\08\0B\0A\0D\0C\0F\0E\01\00\038;:=<?>10325476)(+*-,/.! #ihkjmlona`wvyt", align 16
@LOCAL_ADDRESS = common global i32 0, align 4
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %i = alloca i32, align 4
  %k1 = alloca i8, align 1
  %k2 = alloca i8, align 1
  %k3 = alloca i8, align 1
  %k4 = alloca i8, align 1
  store i8* %data, i8** %1, align 8
  store i32 %data_len, i32* %2, align 4
  store i32 0, i32* %i, align 4
  %3 = load i32, i32* @key, align 4
  %4 = and i32 %3, 255
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* %k1, align 1
  %6 = load i32, i32* @key, align 4
  %7 = lshr i32 %6, 8
  %8 = and i32 %7, 255
  %9 = trunc i32 %8 to i8
  store i8 %9, i8* %k2, align 1
  %10 = load i32, i32* @key, align 4
  %11 = lshr i32 %10, 16
  %12 = and i32 %11, 255
  %13 = trunc i32 %12 to i8
  store i8 %13, i8* %k3, align 1
  %14 = load i32, i32* @key, align 4
  %15 = lshr i32 %14, 24
  %16 = and i32 %15, 255
  %17 = trunc i32 %16 to i8
  store i8 %17, i8* %k4, align 1
  store i32 0, i32* %i, align 4
  %20 = load i32, i32* %i, align 4
  %21 = load i32, i32* %2, align 4
  %22 = icmp slt i32 %20, %21
  %25 = load i8, i8* %k1, align 1
  %26 = zext i8 %25 to i32
  %27 = load i32, i32* %i, align 4
  %28 = sext i32 %27 to i64
  %29 = load i8*, i8** %1, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = xor i32 %32, %26
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %30, align 1
  %35 = load i8, i8* %k2, align 1
  %36 = zext i8 %35 to i32
  %37 = load i32, i32* %i, align 4
  %38 = sext i32 %37 to i64
  %39 = load i8*, i8** %1, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = xor i32 %42, %36
  %44 = trunc i32 %43 to i8
  store i8 %44, i8* %40, align 1
  %45 = load i8, i8* %k3, align 1
  %46 = zext i8 %45 to i32
  %47 = load i32, i32* %i, align 4
  %48 = sext i32 %47 to i64
  %49 = load i8*, i8** %1, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %48
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = xor i32 %52, %46
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %50, align 1
  %55 = load i8, i8* %k4, align 1
  %56 = zext i8 %55 to i32
  %57 = load i32, i32* %i, align 4
  %58 = sext i32 %57 to i64
  %59 = load i8*, i8** %1, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = xor i32 %62, %56
  %64 = trunc i32 %63 to i8
  store i8 %64, i8* %60, align 1
