@sysmap = internal global i8* null, align 8
@sysmap_len = internal global i32 0, align 4
@sysmap_last = internal global i8* null, align 8
@stderr = external global %struct._IO_FILE*, align 8
@sysmap_addrsz = internal global i32 0, align 4
@sysmap_fmt = internal global [10 x i8] zeroinitializer, align 1
@sysmap_symbol.rval = internal global [128 x i8] zeroinitializer, align 16
@sysmap_symbol.pc = internal global i8* null, align 8
@sysmap_symbol.addr = internal global [32 x i8] zeroinitializer, align 16
@sysmap_mean = internal global i32 32, align 4
@psdb = global i32 -1, align 4
@open_psdb.sysmap_paths = internal global [4 x i8*] [i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i32 0, i32 0), i8* null], align 16
@open_psdb.psdb_paths = internal global [5 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* null], align 16
@db_hdr = common global %struct.psdb_hdr zeroinitializer, align 8
@procps_version = external global [0 x i8], align 1
@fncs = common global %struct.tbl_s zeroinitializer, align 8
@wchan.zero = internal global i8 0, align 1
@vars = common global %struct.tbl_s zeroinitializer, align 8
  store i8* %26, i8** @sysmap_symbol.pc, align 8
  %28 = load i32, i32* @sysmap_addrsz, align 4
  %29 = sext i32 %28 to i64
  %30 = call i32 @strncasecmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @sysmap_symbol.addr, i32 0, i32 0), i8* %26, i64 %29) #7
  %33 = icmp sgt i32 %31, 0
  %10 = load i8*, i8** %1, align 8
  %11 = getelementptr inbounds i8, i8* %10, i32 -1
  store i8* %11, i8** %1, align 8
  %12 = load i8*, i8** %2, align 8
  %13 = icmp ugt i8* %11, %12
  %16 = load i32, i32* %n, align 4
  %17 = icmp ne i32 %16, 0
  %20 = load i32, i32* %p, align 4
  %21 = load i32, i32* %n, align 4
  %22 = ashr i32 %21, 1
  %23 = add nsw i32 %20, %22
  store i32 %23, i32* %i, align 4
  %24 = load i32, i32* %i, align 4
  %25 = call i8* @addr_str(i32 %24)
  %36 = load i32, i32* %i, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %p, align 4
  %60 = load i8*, i8** %p, align 8
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp sge i32 %62, 48
  %66 = load i8*, i8** %p, align 8
  %67 = load i8, i8* %66, align 1
  %68 = sext i8 %67 to i32
  %69 = icmp sle i32 %68, 57
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8, align 1
  store i8* %a, i8** %1, align 8
  store i8* %beg, i8** %2, align 8
  store i8 %c, i8* %3, align 1
  %4 = load i8*, i8** %1, align 8
  %5 = icmp ne i8* %4, null
  %40 = load i32, i32* %n, align 4
  %41 = ashr i32 %40, 1
  store i32 %41, i32* %n, align 4
store i8* %6, i8** %path, align 8
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %fd = alloca i32, align 4
  %sbuf = alloca %struct.stat, align 8
  %p = alloca i8*, align 8
  store i8* %path, i8** %2, align 8
  %3 = load i8*, i8** @sysmap, align 8
  %4 = icmp ne i8* %3, null
  store i32 1, i32* %1, align 4
  %54 = load i8*, i8** %p, align 8
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = icmp ne i32 %56, 32
  %44 = load i8*, i8** @sysmap_symbol.pc, align 8
  %45 = load i8*, i8** @sysmap_last, align 8
  %46 = icmp eq i8* %44, %45
  store i8* %51, i8** %1, align 8
