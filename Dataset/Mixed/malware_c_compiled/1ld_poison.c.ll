@PADDING = internal global [64 x i8] c"\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@MDString.output = internal global [33 x i8] zeroinitializer, align 16
@MDFile.output = internal global [33 x i8] zeroinitializer, align 16
@hmac_md5.output = internal global [33 x i8] zeroinitializer, align 16
@argv = global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0), i8* null], align 16
@envp = global [9 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i32 0, i32 0), i8* null], align 16
@old_fxstat = internal global i32 (i32, i32, %struct.stat*)* null, align 8
@old_fxstat64 = internal global i32 (i32, i32, %struct.stat64*)* null, align 8
@old_lxstat = internal global i32 (i32, i8*, %struct.stat*)* null, align 8
@old_lxstat64 = internal global i32 (i32, i8*, %struct.stat64*)* null, align 8
@old_open = internal global i32 (i8*, i32, i32)* null, align 8
@old_rmdir = internal global i32 (i8*)* null, align 8
@old_unlink = internal global i32 (i8*)* null, align 8
@old_unlinkat = internal global i32 (i32, i8*, i32)* null, align 8
@old_xstat = internal global i32 (i32, i8*, %struct.stat*)* null, align 8
@old_xstat64 = internal global i32 (i32, i8*, %struct.stat64*)* null, align 8
@old_fdopendir = internal global %struct.__dirstream* (i32)* null, align 8
@old_opendir = internal global %struct.__dirstream* (i8*)* null, align 8
@old_readdir = internal global %struct.dirent* (%struct.__dirstream*)* null, align 8
@old_readdir64 = internal global %struct.dirent64* (%struct.__dirstream*)* null, align 8
@old_accept = internal global i32 (i32, %struct.sockaddr*, i32*)* null, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @init, i8* null }]
  %48 = bitcast i8* %46 to %struct.__dirstream* (i8*)*
  store %struct.__dirstream* (i8*)* %48, %struct.__dirstream* (i8*)** @old_opendir, align 8
  %49 = call i8* @dlsym(i8* inttoptr (i64 -1 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0)) #6
  %52 = bitcast i8* %50 to %struct.dirent* (%struct.__dirstream*)*
  store %struct.dirent* (%struct.__dirstream*)* %52, %struct.dirent* (%struct.__dirstream*)** @old_readdir, align 8
  %53 = call i8* @dlsym(i8* inttoptr (i64 -1 to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0)) #6
  %56 = bitcast i8* %54 to %struct.dirent* (%struct.__dirstream*)*
  store %struct.dirent* (%struct.__dirstream*)* %56, %struct.dirent* (%struct.__dirstream*)** @old_readdir64, align 8
  %57 = call i8* @dlsym(i8* inttoptr (i64 -1 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0)) #6
store %struct.MD5_CTX* %context, %struct.MD5_CTX** %context, align 8
  %1 = alloca %struct.MD5_CTX*, align 8
  store %struct.MD5_CTX* %context, %struct.MD5_CTX** %1, align 8
  %2 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %3 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %2, i32 0, i32 1
  %4 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 1
  store i64 0, i64* %4, align 8
  %5 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %6 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %5, i32 0, i32 1
  %7 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 0
  store i64 0, i64* %7, align 8
  %8 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %9 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %8, i32 0, i32 0
  %10 = getelementptr inbounds [4 x i64], [4 x i64]* %9, i64 0, i64 0
  store i64 1732584193, i64* %10, align 8
  %11 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %12 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %11, i32 0, i32 0
  %13 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 1
  store i64 4023233417, i64* %13, align 8
  %14 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %15 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %14, i32 0, i32 0
  %16 = getelementptr inbounds [4 x i64], [4 x i64]* %15, i64 0, i64 2
  store i64 2562383102, i64* %16, align 8
  %17 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %18 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %17, i32 0, i32 0
  %19 = getelementptr inbounds [4 x i64], [4 x i64]* %18, i64 0, i64 3
  store i64 271733878, i64* %19, align 8
store %struct.MD5_CTX* %26, %struct.MD5_CTX** %context, align 8
store  i8* %27, i8** %input, align 8
store  i32 8, i32* %inputLen, align 8
  %1 = alloca %struct.MD5_CTX*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %partLen = alloca i32, align 4
  store %struct.MD5_CTX* %context, %struct.MD5_CTX** %1, align 8
  store i8* %input, i8** %2, align 8
  store i32 %inputLen, i32* %3, align 4
  %4 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %5 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %4, i32 0, i32 1
  %6 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 0
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 3
  %9 = and i64 %8, 63
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %index, align 4
  %11 = load i32, i32* %3, align 4
  %12 = zext i32 %11 to i64
  %13 = shl i64 %12, 3
  %14 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %15 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %14, i32 0, i32 1
  %16 = getelementptr inbounds [2 x i64], [2 x i64]* %15, i64 0, i64 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %13
  store i64 %18, i64* %16, align 8
  %19 = load i32, i32* %3, align 4
  %20 = zext i32 %19 to i64
  %21 = shl i64 %20, 3
  %22 = icmp ult i64 %18, %21
  %32 = load i32, i32* %3, align 4
  %33 = zext i32 %32 to i64
  %34 = lshr i64 %33, 29
  %35 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %36 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %35, i32 0, i32 1
  %37 = getelementptr inbounds [2 x i64], [2 x i64]* %36, i64 0, i64 1
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %34
  store i64 %39, i64* %37, align 8
  %40 = load i32, i32* %index, align 4
  %41 = sub i32 64, %40
  store i32 %41, i32* %partLen, align 4
  %42 = load i32, i32* %3, align 4
  %43 = load i32, i32* %partLen, align 4
  %44 = icmp uge i32 %42, %43
  %47 = load i32, i32* %index, align 4
  %48 = zext i32 %47 to i64
  %49 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %50 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %49, i32 0, i32 2
  %51 = getelementptr inbounds [64 x i8], [64 x i8]* %50, i64 0, i64 %48
  %52 = load i8*, i8** %2, align 8
  %53 = load i32, i32* %partLen, align 4
  call void @MD5_memcpy(i8* %51, i8* %52, i32 %53)
  %64 = load i32, i32* %partLen, align 4
  store i32 %64, i32* %i, align 4
  %67 = load i32, i32* %i, align 4
  %68 = add i32 %67, 63
  %69 = load i32, i32* %3, align 4
  %70 = icmp ult i32 %68, %69
  %73 = load %struct.MD5_CTX*, %struct.MD5_CTX** %1, align 8
  %74 = getelementptr inbounds %struct.MD5_CTX, %struct.MD5_CTX* %73, i32 0, i32 0
  %75 = getelementptr inbounds [4 x i64], [4 x i64]* %74, i32 0, i32 0
  %76 = load i32, i32* %i, align 4
  %77 = zext i32 %76 to i64
  %78 = load i8*, i8** %2, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  call void @MD5Transform(i64* %75, i8* %79)
  %82 = load i32, i32* %i, align 4
  %83 = add i32 %82, 64
  store i32 %83, i32* %i, align 4
