@uptime.n = internal global i32 0, align 4
@uptime.fd = internal global i32 -1, align 4
@stderr = external global %struct._IO_FILE*, align 8
@buf = internal global [300 x i8] zeroinitializer, align 16
@loadavg.n = internal global i32 0, align 4
@loadavg.fd = internal global i32 -1, align 4
@meminfo.row = internal global [4 x i32*] zeroinitializer, align 16
@meminfo.num = internal global [21 x i32] zeroinitializer, align 16
@meminfo.n = internal global i32 0, align 4
@meminfo.fd = internal global i32 -1, align 4
  store i32 1, i32* %1, align 4
  %86 = load i32, i32* %1, align 4
  store i32 -1, i32* @loadavg.fd, align 4
  store i32 0, i32* %1, align 4
  %45 = load i32, i32* @loadavg.n, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [300 x i8], [300 x i8]* @buf, i64 0, i64 %46
  store i8 0, i8* %47, align 1
  %48 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @buf, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), double* %avg_1, double* %avg_5, double* %avg_15) #6
  %76 = load double*, double** %4, align 8
  %77 = icmp ne double* %76, null
  %80 = load double, double* %avg_15, align 8
  %81 = load double*, double** %4, align 8
  store double %80, double* %81, align 8
  %1 = alloca i32**, align 8
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %2 = load i32, i32* @meminfo.fd, align 4
  %3 = icmp eq i32 %2, -1
  %50 = icmp slt i32 %48, 2
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i32 0, i32 0))
  %39 = load i32, i32* @loadavg.fd, align 4
  %40 = call i32 @close(i32 %39)
  %6 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i32 0)
  %1 = alloca i32, align 4
  %2 = alloca double*, align 8
  %3 = alloca double*, align 8
  %up = alloca double, align 8
  %idle = alloca double, align 8
  store double* %uptime_secs, double** %2, align 8
  store double* %idle_secs, double** %3, align 8
  store double 0.000000e+00, double* %up, align 8
  store double 0.000000e+00, double* %idle, align 8
  %4 = load i32, i32* @uptime.fd, align 4
  %5 = icmp eq i32 %4, -1
  %8 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 0)
  %44 = load i32, i32* @uptime.n, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [300 x i8], [300 x i8]* @buf, i64 0, i64 %45
  store i8 0, i8* %46, align 1
  %47 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @buf, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), double* %up, double* %idle) #6
  store i32 %7, i32* @meminfo.fd, align 4
  %9 = icmp eq i32 %7, -1
  %16 = load i32, i32* @meminfo.fd, align 4
  %17 = call i32 @close(i32 %16)
