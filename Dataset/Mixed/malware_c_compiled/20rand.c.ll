@x = internal global i32 0, align 4
@y = internal global i32 0, align 4
@z = internal global i32 0, align 4
@w = internal global i32 0, align 4
@LOCAL_ADDR = common global i32 0, align 4
  %1 = call i64 @time(i64* null) #2
  %4 = trunc i64 %2 to i32
  store i32 %4, i32* @x, align 4
  %5 = call i32 @getpid() #3
  %15 = trunc i64 %13 to i32
  store i32 %15, i32* @z, align 4
  %16 = load i32, i32* @z, align 4
  %17 = load i32, i32* @y, align 4
  %18 = xor i32 %16, %17
  store i32 %18, i32* @w, align 4
  %t = alloca i32, align 4
  %1 = load i32, i32* @x, align 4
  store i32 %1, i32* %t, align 4
  %2 = load i32, i32* %t, align 4
  %3 = shl i32 %2, 11
  %4 = load i32, i32* %t, align 4
  %5 = xor i32 %4, %3
  store i32 %5, i32* %t, align 4
  %6 = load i32, i32* %t, align 4
  %7 = lshr i32 %6, 8
  %8 = load i32, i32* %t, align 4
  %9 = xor i32 %8, %7
  store i32 %9, i32* %t, align 4
  %10 = load i32, i32* @y, align 4
  store i32 %10, i32* @x, align 4
  %11 = load i32, i32* @z, align 4
  store i32 %11, i32* @y, align 4
  %12 = load i32, i32* @w, align 4
  store i32 %12, i32* @z, align 4
  %13 = load i32, i32* @w, align 4
  %14 = lshr i32 %13, 19
  %15 = load i32, i32* @w, align 4
  %16 = xor i32 %15, %14
  store i32 %16, i32* @w, align 4
  %17 = load i32, i32* %t, align 4
  %18 = load i32, i32* @w, align 4
  %19 = xor i32 %18, %17
  store i32 %19, i32* @w, align 4
  %20 = load i32, i32* @w, align 4
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  store i8* %str, i8** %1, align 8
  store i32 %len, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp sgt i32 %5, 0
  %41 = load i32, i32* %i, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %i, align 4
