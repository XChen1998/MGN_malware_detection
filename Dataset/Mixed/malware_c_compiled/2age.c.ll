@stdout = external global %struct._IO_FILE*, align 8
  store %struct.spwd* %13, %struct.spwd** %2, align 8
  %17 = load %struct.spwd*, %struct.spwd** %2, align 8
  %18 = getelementptr inbounds %struct.spwd, %struct.spwd* %17, i32 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, -1
  %115 = load i32, i32* %child, align 4
  %116 = icmp ne i32 %115, -1
  %119 = phi i1 [ false, %109 ], [ %117, %114 ]
  %6 = sdiv i64 %4, 86400
  store i64 %6, i64* %clock, align 8
  %7 = load %struct.spwd*, %struct.spwd** %2, align 8
  %8 = icmp ne %struct.spwd* %7, null
  %11 = load %struct.passwd*, %struct.passwd** %1, align 8
  %12 = call %struct.spwd* @pwd_to_spwd(%struct.passwd* %11)
  %23 = load %struct.spwd*, %struct.spwd** %2, align 8
  %24 = getelementptr inbounds %struct.spwd, %struct.spwd* %23, i32 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, -1
  %51 = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0))
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %55 = call i32 @fflush(%struct._IO_FILE* %54)
  %110 = phi i32 [ %122, %118 ], [ %108, %103 ]
  store i32 %110, i32* %child, align 4
  %111 = load i32, i32* %pid, align 4
  %112 = icmp ne i32 %110, %111
  %29 = load %struct.spwd*, %struct.spwd** %2, align 8
  %30 = getelementptr inbounds %struct.spwd, %struct.spwd* %29, i32 0, i32 5
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, -1
  %1 = alloca i32, align 4
  %2 = alloca %struct.passwd*, align 8
  %3 = alloca %struct.spwd*, align 8
  %status = alloca i32, align 4
  %child = alloca i32, align 4
  %pid = alloca i32, align 4
  %4 = alloca %union.__WAIT_STATUS, align 8
  store %struct.passwd* %pw, %struct.passwd** %2, align 8
  store %struct.spwd* %sp, %struct.spwd** %3, align 8
  %5 = load %struct.spwd*, %struct.spwd** %3, align 8
  %6 = icmp ne %struct.spwd* %5, null
  %9 = load %struct.passwd*, %struct.passwd** %2, align 8
  %10 = call %struct.spwd* @pwd_to_spwd(%struct.passwd* %9)
  call void @exit(i32 1) #6
  unreachable
  %52 = load i64, i64* %remain, align 8
  %53 = sdiv i64 %52, 1
  store i64 %53, i64* %remain, align 8
  %54 = load i64, i64* %remain, align 8
  %55 = icmp sgt i64 %54, 1
