@speed_table = internal global [16 x %struct.anon] [%struct.anon { i32 1, i32 50 }, %struct.anon { i32 2, i32 75 }, %struct.anon { i32 3, i32 110 }, %struct.anon { i32 4, i32 134 }, %struct.anon { i32 5, i32 150 }, %struct.anon { i32 6, i32 200 }, %struct.anon { i32 7, i32 300 }, %struct.anon { i32 8, i32 600 }, %struct.anon { i32 9, i32 1200 }, %struct.anon { i32 10, i32 1800 }, %struct.anon { i32 11, i32 2400 }, %struct.anon { i32 12, i32 4800 }, %struct.anon { i32 13, i32 9600 }, %struct.anon { i32 14, i32 19200 }, %struct.anon { i32 15, i32 38400 }, %struct.anon { i32 -1, i32 -1 }], align 16
  %62 = load i32, i32* %i, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %i, align 4
  %30 = load i8*, i8** %1, align 8
  %31 = call i64 @read(i32 0, i8* %30, i64 1)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %pwd = alloca %struct.passwd*, align 8
  %remote_name = alloca [32 x i8], align 16
  %cp = alloca i8*, align 8
  %remote_speed = alloca i32, align 4
  %speed_name = alloca i32, align 4
  %i = alloca i32, align 4
  %termio = alloca %struct.termios, align 4
  store i8* %remote_host, i8** %2, align 8
  store i8* %name, i8** %3, align 8
  store i32 %namelen, i32* %4, align 4
  store i8* %term, i8** %5, align 8
  store i32 %termlen, i32* %6, align 4
  store i32 9600, i32* %remote_speed, align 4
  store i32 13, i32* %speed_name, align 4
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %remote_name, i32 0, i32 0
  call void @get_remote_string(i8* %7, i32 32)
  %10 = load i8*, i8** %3, align 8
  %11 = load i32, i32* %4, align 4
  call void @get_remote_string(i8* %10, i32 %11)
  %57 = phi i1 [ false, %39 ], [ %55, %48 ]
