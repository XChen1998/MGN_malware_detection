#!/usr/bin/python

import networkx as nx
import glob
import numpy as np
import json
import os
import re
G = nx.Graph()
elist = [(1, 2, 1),(2, 1, 1),(2, 3, 256),(3, 2, 256),(3, 5, 256),(4, 5, 256),(5, 3, 256),(5, 4, 256),(6, 7, 1),(7, 6, 1),(8, 9, 1),(9, 8, 1),(10, 11, 1),(11, 10, 1),(11, 12, 256),(12, 11, 256),(12, 13, 1),(12, 13, 1),(13, 12, 1),(13, 12, 1),(14, 15, 256),(15, 14, 256),(15, 16, 256),(16, 15, 256),(16, 17, 1),(17, 16, 1),(17, 18, 1),(18, 17, 1),(19, 20, 256),(20, 19, 256),(20, 21, 256),(21, 20, 256),(22, 23, 1),(23, 22, 1),(23, 24, 256),(24, 23, 256),(24, 25, 1),(24, 25, 1),(25, 24, 1),(25, 24, 1),(26, 27, 1),(27, 26, 1),(27, 28, 256),(28, 27, 256),(28, 29, 1),(29, 28, 1),(29, 30, 1),(30, 29, 1),(32, 51, 256),(33, 52, 256),(34, 53, 256),(35, 54, 256),(36, 55, 256),(37, 56, 256),(41, 68, 256),(41, 70, 256),(42, 65, 256),(43, 66, 256),(44, 61, 256),(51, 32, 256),(51, 62, 256),(52, 33, 256),(53, 34, 256),(54, 35, 256),(54, 59, 256),(55, 36, 256),(55, 57, 256),(56, 37, 256),(57, 55, 256),(57, 58, 256),(58, 57, 256),(59, 54, 256),(59, 60, 256),(60, 59, 256),(61, 44, 256),(62, 51, 256),(62, 63, 1),(62, 63, 1),(63, 62, 1),(63, 62, 1),(65, 42, 256),(66, 43, 256),(66, 67, 1),(67, 66, 1),(68, 41, 256),(68, 69, 1),(69, 68, 1),(70, 41, 256),(70, 71, 1),(70, 71, 1),(71, 70, 1),(71, 70, 1)]
G.add_weighted_edges_from(elist)
r = nx.degree_assortativity_coefficient(G)
print("assortativity coefficient = %3.3f"%r)
if os.path.isfile("graphs.gpickle"):
	# Load the graphs from a file
	graphs = nx.read_gpickle("graphs.gpickle")

else:
	graphs = {}
# Define a regular expression pattern to match operators
op_pattern = re.compile(r"^.*?\s+(?P<op>[a-z]+)")
# Get the name of the current file
filename = os.path.basename(__file__)

# Print the filename
#print(filename.split("-"))
filell = filename.split("-")[0] + ".ll"
with open(filell, "r") as file:

	lines = file.readlines()

#print(lines)
for node in G.nodes():
	#print(node)
	#print(lines[node])
	match = op_pattern.match(lines[node])
	if match:
		operator = match.group("op")
		#print(operator)
		G.nodes[node]["operation"] = operator
graphs[filename.split("-")[0]] = G
nx.write_gpickle(graphs, "graphs.gpickle")
