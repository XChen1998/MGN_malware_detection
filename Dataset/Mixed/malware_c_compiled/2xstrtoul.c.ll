  store i32 3, i32* %1, align 4
  %152 = load i64, i64* %tmp, align 8
  %153 = mul i64 %152, 2
  store i64 %153, i64* %tmp, align 8
  %75 = icmp ne i8* %73, null
  %78 = load i8**, i8*** %p, align 8
  %79 = load i8*, i8** %78, align 8
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  switch i32 %81, label %138 [
    i32 98, label %82
    i32 99, label %95
    i32 66, label %99
    i32 107, label %99
    i32 109, label %112
    i32 119, label %125
  ]
  %145 = load i64, i64* %tmp, align 8
  %146 = uitofp i64 %145 to double
  %147 = fcmp ogt double %146, 0x43E0000000000000
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64*, align 8
  %6 = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8
  %p = alloca i8**, align 8
  %tmp = alloca i64, align 8
  store i8* %s, i8** %2, align 8
  store i8** %ptr, i8*** %3, align 8
  store i32 %base, i32* %4, align 4
  store i64* %val, i64** %5, align 8
  store i8* %valid_suffixes, i8** %6, align 8
  %7 = load i8**, i8*** %3, align 8
  %8 = icmp ne i8** %7, null
  %11 = load i8**, i8*** %3, align 8
  store i8** %11, i8*** %p, align 8
  %12 = call i32* @__errno_location() #5
  store i32 0, i32* %12, align 4
  %13 = load i8*, i8** %2, align 8
  %14 = load i8**, i8*** %p, align 8
  %15 = load i32, i32* %4, align 4
  %16 = call i64 (i8*, i8**, i32, ...) bitcast (i64 (...)* @strtoul to i64 (i8*, i8**, i32, ...)*)(i8* %13, i8** %14, i32 %15)
  store i64 %16, i64* %tmp, align 8
  %17 = call i32* @__errno_location() #5
  %67 = load i8*, i8** %6, align 8
  %68 = load i8**, i8*** %p, align 8
  %69 = load i8*, i8** %68, align 8
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = call i8* @index(i8* %67, i32 %71) #6
