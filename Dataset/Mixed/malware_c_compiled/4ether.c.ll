@ether_hwtype = global %struct.hwtype { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* null, i32 1, i32 6, i8* (i8*)* @pr_ether, i8* (%struct.sockaddr*)* @pr_sether, i32 (i8*, %struct.sockaddr*)* @in_ether, i32 (i32)* null }, align 8
@pr_ether.buff = internal global [64 x i8] zeroinitializer, align 16
@pr_sether.buf = internal global [64 x i8] zeroinitializer, align 16
  store i32 0, i32* %1, align 4
  %161 = call i32* @__errno_location() #4
  store i32 22, i32* %162, align 4
  store i32 -1, i32* %1, align 4
  %195 = load i32, i32* %i, align 4
  %196 = icmp eq i32 %195, 6
  %199 = load i8*, i8** %2, align 8
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp ne i32 %201, 0
  %209 = load i32, i32* %1, align 4
  %36 = load i16*, i16** %34, align 8
  %37 = getelementptr inbounds i16, i16* %36, i64 %33
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 2048
  %41 = icmp ne i32 %40, 0
  %44 = load i8, i8* %c, align 1
  %45 = sext i8 %44 to i32
  %46 = sub nsw i32 %45, 48
  store i32 %46, i32* %val, align 4
  %47 = load i32, i32* %val, align 4
  %48 = shl i32 %47, 4
  store i32 %48, i32* %val, align 4
  %49 = load i8*, i8** %2, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %2, align 8
  %51 = load i8, i8* %49, align 1
  store i8 %51, i8* %c, align 1
  %52 = load i8, i8* %c, align 1
  %53 = sext i8 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i16** @__ctype_b_loc() #4
  %153 = load i8, i8* %c, align 1
  %154 = sext i8 %153 to i32
  %155 = sub nsw i32 %154, 65
  %156 = add nsw i32 %155, 10
  %157 = load i32, i32* %val, align 4
  %158 = or i32 %157, %156
  store i32 %158, i32* %val, align 4
  %1 = alloca i8*, align 8
  store i8* %ptr, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds i8, i8* %2, i64 0
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = and i32 %5, 255
  %7 = load i8*, i8** %1, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = and i32 %10, 255
  %12 = load i8*, i8** %1, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = and i32 %15, 255
  %17 = load i8*, i8** %1, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = and i32 %20, 255
  %22 = load i8*, i8** %1, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 4
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = and i32 %25, 255
  %27 = load i8*, i8** %1, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = and i32 %30, 255
  %32 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @pr_ether.buff, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i32 %6, i32 %11, i32 %16, i32 %21, i32 %26, i32 %31) #3
  %1 = alloca i8*, align 8
  %2 = alloca %struct.sockaddr*, align 8
  store %struct.sockaddr* %sap, %struct.sockaddr** %2, align 8
  %3 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8
  %4 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %5 = load i16, i16* %4, align 2
  %6 = zext i16 %5 to i32
  %7 = icmp eq i32 %6, 65535
  store i32 0, i32* %val, align 4
  %27 = load i8*, i8** %2, align 8
  %28 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %28, i8** %2, align 8
  %29 = load i8, i8* %27, align 1
  store i8 %29, i8* %c, align 1
  %30 = load i8, i8* %c, align 1
  %31 = sext i8 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = call i16** @__ctype_b_loc() #4
