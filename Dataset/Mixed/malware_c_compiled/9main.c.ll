@fd_ctrl = global i32 -1, align 4
@fd_serv = global i32 -1, align 4
@ioctl_pid = global i32 0, align 4
@pending_connection = global i8 0, align 1
@resolve_func = global void ()* bitcast (i32 ()* @util_local_addr to void ()*), align 8
@LOCAL_ADDR = common global i32 0, align 4
@srv_addr = common global %struct.sockaddr_in zeroinitializer, align 4
@ensure_single_instance.local_bind = internal global i8 1, align 1
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %tbl_exec_succ = alloca i8*, align 8
  %name_buf = alloca [32 x i8], align 16
  %id_buf = alloca [32 x i8], align 16
  %name_buf_len = alloca i32, align 4
  %tbl_exec_succ_len = alloca i32, align 4
  %pgid = alloca i32, align 4
  %pings = alloca i32, align 4
  %sigs = alloca %struct.__sigset_t, align 8
  %fdsetrd = alloca %struct.__sigset_t, align 8
  %fdsetwr = alloca %struct.__sigset_t, align 8
  %fdsetex = alloca %struct.__sigset_t, align 8
  %timeo = alloca %struct.timeval, align 8
  %mfd = alloca i32, align 4
  %nfds = alloca i32, align 4
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  %__d01 = alloca i32, align 4
  %__d12 = alloca i32, align 4
  %len = alloca i16, align 2
  %cli_addr = alloca %struct.sockaddr_in, align 4
  %cli_addr_len = alloca i32, align 4
  %4 = alloca %union.__SOCKADDR_ARG, align 8
  %err = alloca i32, align 4
  %err_len = alloca i32, align 4
  %id_len = alloca i8, align 1
  %n = alloca i32, align 4
  %len3 = alloca i16, align 2
  %rdbuf = alloca [1024 x i8], align 16
  store i32 0, i32* %1, align 4
  store i32 %argc, i32* %2, align 4
  store i8** %args, i8*** %3, align 8
  store i32 0, i32* %name_buf_len, align 4
  store i32 0, i32* %tbl_exec_succ_len, align 4
  store i32 0, i32* %pgid, align 4
  store i32 0, i32* %pings, align 4
  %5 = call i32 @sigemptyset(%struct.__sigset_t* %sigs) #5
  %8 = call i32 @sigaddset(%struct.__sigset_t* %sigs, i32 2) #6
  %11 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* %sigs, %struct.__sigset_t* null) #6
  %264 = phi i32 [ %262, %255 ], [ %254, %247 ]
  store i32 %264, i32* %nfds, align 4
  %265 = load i32, i32* %nfds, align 4
  %266 = icmp eq i32 %265, -1
