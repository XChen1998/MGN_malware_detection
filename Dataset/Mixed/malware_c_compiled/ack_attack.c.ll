@sleeptime = global i32 100, align 4
@Q = internal global [4096 x i64] zeroinitializer, align 16
@rand_cmwc.i = internal global i64 4095, align 8
@c = internal global i64 362436, align 8
@stderr = external global %struct._IO_FILE*, align 8
@pps = common global i32 0, align 4
@limiter = common global i32 0, align 4
@stdout = external global %struct._IO_FILE*, align 8
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %num_threads = alloca i32, align 4
  %maxpps = alloca i32, align 4
  %4 = alloca i8*, align 8
  %multiplier = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  %5 = load i32, i32* %2, align 4
  %6 = icmp slt i32 %5, 5
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0))
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %14 = load i8**, i8*** %3, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i32 0, i32 0), i8* %16)
  call void @exit(i32 -1) #9
  unreachable
