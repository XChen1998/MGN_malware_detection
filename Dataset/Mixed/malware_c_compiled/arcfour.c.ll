  %25 = load i32, i32* %x, align 4
  %26 = add i32 %25, 1
  %27 = and i32 %26, 255
  store i32 %27, i32* %x, align 4
  %28 = load i32, i32* %x, align 4
  %29 = zext i32 %28 to i64
  %30 = load i8*, i8** %state, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 %29
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  store i32 %33, i32* %sx, align 4
  %34 = load i32, i32* %y, align 4
  %35 = load i32, i32* %sx, align 4
  %36 = add i32 %34, %35
  %37 = and i32 %36, 255
  store i32 %37, i32* %y, align 4
  %38 = load i32, i32* %y, align 4
  %39 = zext i32 %38 to i64
  %40 = load i8*, i8** %state, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %39
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  store i32 %43, i32* %sy, align 4
  %44 = load i32, i32* %sx, align 4
  %45 = trunc i32 %44 to i8
  %46 = load i32, i32* %y, align 4
  %47 = zext i32 %46 to i64
  %48 = load i8*, i8** %state, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  store i8 %45, i8* %49, align 1
  %50 = load i32, i32* %sy, align 4
  %51 = trunc i32 %50 to i8
  %52 = load i32, i32* %x, align 4
  %53 = zext i32 %52 to i64
  %54 = load i8*, i8** %state, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 %51, i8* %55, align 1
  %56 = load i32, i32* %i, align 4
  %57 = zext i32 %56 to i64
  %58 = load i8*, i8** %3, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = load i32, i32* %sx, align 4
  %63 = load i32, i32* %sy, align 4
  %64 = add i32 %62, %63
  %65 = and i32 %64, 255
  %66 = zext i32 %65 to i64
  %67 = load i8*, i8** %state, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 %66
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = xor i32 %61, %70
  %72 = trunc i32 %71 to i8
  %73 = load i32, i32* %i, align 4
  %74 = zext i32 %73 to i64
  %75 = load i8*, i8** %2, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %74
  store i8 %72, i8* %76, align 1
  %79 = load i32, i32* %i, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %i, align 4
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %ctx = alloca %struct.SshArcfourContext*, align 8
  %t = alloca i32, align 4
  %u = alloca i32, align 4
  %keyindex = alloca i64, align 8
  %stateindex = alloca i32, align 4
  %state = alloca i8*, align 8
  %counter = alloca i32, align 4
  store i8* %context, i8** %1, align 8
  store i8* %key, i8** %2, align 8
  store i64 %keylen, i64* %3, align 8
  store i32 %for_encryption, i32* %4, align 4
  %5 = load i8*, i8** %1, align 8
  %6 = bitcast i8* %5 to %struct.SshArcfourContext*
  store %struct.SshArcfourContext* %6, %struct.SshArcfourContext** %ctx, align 8
  %7 = load %struct.SshArcfourContext*, %struct.SshArcfourContext** %ctx, align 8
  %8 = getelementptr inbounds %struct.SshArcfourContext, %struct.SshArcfourContext* %7, i32 0, i32 2
  %9 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 0
  store i8* %9, i8** %state, align 8
  %10 = load %struct.SshArcfourContext*, %struct.SshArcfourContext** %ctx, align 8
  %11 = getelementptr inbounds %struct.SshArcfourContext, %struct.SshArcfourContext* %10, i32 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = load %struct.SshArcfourContext*, %struct.SshArcfourContext** %ctx, align 8
  %13 = getelementptr inbounds %struct.SshArcfourContext, %struct.SshArcfourContext* %12, i32 0, i32 1
  store i32 0, i32* %13, align 4
  store i32 0, i32* %counter, align 4
  %16 = load i32, i32* %counter, align 4
  %17 = icmp ult i32 %16, 256
  %19 = load i32, i32* %i, align 4
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %4, align 8
  %22 = icmp ult i64 %20, %21
