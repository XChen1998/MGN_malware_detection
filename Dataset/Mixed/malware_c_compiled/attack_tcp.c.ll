@LOCAL_ADDR = common global i32 0, align 4
  %412 = and i32 %410, 65535
  %413 = trunc i32 %412 to i16
  %414 = load %struct.tcphdr*, %struct.tcphdr** %tcph2, align 8
  %415 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %414, i32 0, i32 0
  store i16 %413, i16* %415, align 4
  %426 = and i32 %424, 65535
  %427 = trunc i32 %426 to i16
  %428 = load %struct.tcphdr*, %struct.tcphdr** %tcph2, align 8
  %429 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %428, i32 0, i32 1
  store i16 %427, i16* %429, align 2
  %295 = and i32 %293, 65535
  %296 = trunc i32 %295 to i16
  %297 = load %struct.tcphdr*, %struct.tcphdr** %tcph, align 8
  %298 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %297, i32 0, i32 5
  store i16 %296, i16* %298, align 2
  %299 = load i8, i8* %psh_fl, align 1
  %300 = icmp ne i8 %299, 0
  %303 = load %struct.tcphdr*, %struct.tcphdr** %tcph, align 8
  %304 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %303, i32 0, i32 4
  %305 = load i16, i16* %304, align 4
  %306 = and i16 %305, -2049
  %307 = or i16 %306, 2048
  store i16 %307, i16* %304, align 4
  %310 = load i8*, i8** %payload, align 8
  %311 = load i32, i32* %data_len, align 4
  call void @rand_str(i8* %310, i32 %311)
  %314 = load i32, i32* %i, align 4
  %315 = add nsw i32 %314, 1
  store i32 %315, i32* %i, align 4
  %404 = load i16, i16* %sport, align 2
  %405 = zext i16 %404 to i32
  %406 = icmp eq i32 %405, 65535
  %432 = load i32, i32* %seq, align 4
  %433 = icmp eq i32 %432, 65535
  %436 = call i32 @rand_next()
  %439 = load %struct.tcphdr*, %struct.tcphdr** %tcph2, align 8
  %440 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %439, i32 0, i32 2
  store i32 %437, i32* %440, align 4
