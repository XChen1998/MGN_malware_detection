@stdout = external global %struct._IO_FILE*, align 8
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %dire = alloca %struct.sockaddr_in, align 4
  %puerto = alloca i16, align 2
  %dpuerto = alloca i16, align 2
  %soc = alloca i32, align 4
  %soc2 = alloca i32, align 4
  %modo = alloca i32, align 4
  %s_read = alloca %struct.fd_set, align 8
  %tmp = alloca i8, align 1
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  %4 = load i32, i32* %2, align 4
  %5 = load i8**, i8*** %3, align 8
  %6 = call i32 @test_args(i32 %4, i8** %5)
store i32 %4, i32* %argc, align 8
store  i8** %5, i8*** %argv, align 8
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %modo = alloca i32, align 4
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 3
  %8 = load i8**, i8*** %3, align 8
  %9 = getelementptr inbounds i8*, i8** %8, i64 0
  %10 = load i8*, i8** %9, align 8
  call void @show_instr(i8* %10)
store i8* %9, i8** %name, align 8
  %1 = alloca i8*, align 8
  store i8* %name, i8** %1, align 8
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15, i32 0, i32 0))
  %5 = load i8*, i8** %1, align 8
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i32 0, i32 0), i8* %5)
  %9 = load i8*, i8** %1, align 8
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.17, i32 0, i32 0), i8* %9)
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i32 0, i32 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0))
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.20, i32 0, i32 0))
  store i32 -1, i32* %1, align 4
  %79 = load i32, i32* %1, align 4
  store i32 %7, i32* %modo, align 4
  %9 = icmp eq i32 %7, -1
  %12 = load i32, i32* %modo, align 4
  call void @exit(i32 %12) #8
  unreachable
