@old_listxattr = common global i64 (i8*, i8*, i64)* null, align 8
@old_flistxattr = common global i64 (i32, i8*, i64)* null, align 8
@old_llistxattr = common global i64 (i8*, i8*, i64)* null, align 8
@old_getxattr = common global i64 (i8*, i8*, i8*, i64)* null, align 8
@old_lgetxattr = common global i64 (i8*, i8*, i8*, i64)* null, align 8
@old_fgetxattr = common global i64 (i32, i8*, i8*, i64)* null, align 8
@old_setxattr = common global i32 (i8*, i8*, i8*, i64, i32)* null, align 8
@old_lsetxattr = common global i32 (i8*, i8*, i8*, i64, i32)* null, align 8
@old_fsetxattr = common global i32 (i32, i8*, i8*, i64, i32)* null, align 8
@old_removexattr = common global i32 (i8*, i8*)* null, align 8
@old_lremovexattr = common global i32 (i8*, i8*)* null, align 8
@old_fremovexattr = common global i32 (i32, i8*)* null, align 8
@old_open = common global i32 (i8*, i32, i32)* null, align 8
@old_open64 = common global i32 (i8*, i32, i32)* null, align 8
@old_openat = common global i32 (i32, i8*, i32, i32)* null, align 8
@old_creat = common global i32 (i8*, i32)* null, align 8
@old_unlink = common global i32 (i8*)* null, align 8
@old_unlinkat = common global i32 (i32, i8*, i32)* null, align 8
@old_rmdir = common global i32 (i8*)* null, align 8
@old_symlink = common global i32 (i8*, i8*)* null, align 8
@old_symlinkat = common global i32 (i8*, i32, i8*)* null, align 8
@old_mkdir = common global i32 (i8*, i32)* null, align 8
@old_mkdirat = common global i32 (i32, i8*, i32)* null, align 8
@old_chdir = common global i32 (i8*)* null, align 8
@old_fchdir = common global i32 (i32)* null, align 8
@old_opendir = common global %struct.__dirstream* (i8*)* null, align 8
@old_opendir64 = common global %struct.__dirstream* (i8*)* null, align 8
@old_fdopendir = common global %struct.__dirstream* (i32)* null, align 8
@old_readdir = common global %struct.dirent* (%struct.__dirstream*)* null, align 8
@old_readdir64 = common global %struct.dirent64* (%struct.__dirstream*)* null, align 8
@old_execve = common global i32 (i8*, i8**, i8**)* null, align 8
store i8* %20, i8** %file, align 8
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %buflen = alloca i64, align 8
  %keylen = alloca i64, align 8
  %buf = alloca i8*, align 8
  %key = alloca i8*, align 8
  store i8* %file, i8** %2, align 8
  %3 = load i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)** @old_listxattr, align 8
  %4 = icmp ne i64 (i8*, i8*, i64)* %3, null
  %7 = call i8* @dlsym(i8* inttoptr (i64 -1 to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0)) #8
  %10 = bitcast i8* %8 to i64 (i8*, i8*, i64)*
  store i64 (i8*, i8*, i64)* %10, i64 (i8*, i8*, i64)** @old_listxattr, align 8
