@ret_value = global i32 0, align 4
@p_most = common global [1024 x i8] zeroinitializer, align 16
store i8* %65, i8** %string, align 8
store  [1024 x i8]* %66, [1024 x i8]** %array, align 8
store  i32 %67, i32* %maxarray, align 8
  %1 = alloca i8*, align 8
  %2 = alloca [1024 x i8]*, align 8
  %3 = alloca i32, align 4
  store i8* %string, i8** %1, align 8
  store [1024 x i8]* %array, [1024 x i8]** %2, align 8
  store i32 %maxarray, i32* %3, align 4
  %6 = load i32, i32* %3, align 4
  %7 = add nsw i32 %6, -1
  store i32 %7, i32* %3, align 4
  %8 = icmp ne i32 %6, 0
  %11 = load i8*, i8** %1, align 8
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  %14 = load [1024 x i8]*, [1024 x i8]** %2, align 8
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %14, i64 %13
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i32 0, i32 0
  %17 = load i32, i32* %3, align 4
  %18 = sext i32 %17 to i64
  %19 = load [1024 x i8]*, [1024 x i8]** %2, align 8
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i64 %18
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %20, i32 0, i32 0
  %22 = call i64 @strlen(i8* %21) #6
  %25 = call i32 @strncmp(i8* %11, i8* %16, i64 %23) #6
  %28 = icmp eq i32 %26, 0
