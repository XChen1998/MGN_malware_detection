@f_ptr = common global [256 x i8*] zeroinitializer, align 16
@main_buf = common global [80 x i8] zeroinitializer, align 16
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %number = alloca i32, align 4
  store i8* %z, i8** %2, align 8
  store i32 0, i32* %number, align 4
  %3 = load i8*, i8** %2, align 8
  store i8* %3, i8** getelementptr inbounds ([256 x i8*], [256 x i8*]* @f_ptr, i64 0, i64 0), align 16
  %28 = load i8*, i8** %2, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 13
  %34 = load i8*, i8** %2, align 8
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 10
  %40 = load i8*, i8** %2, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  %42 = load i32, i32* %number, align 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [256 x i8*], [256 x i8*]* @f_ptr, i64 0, i64 %44
  store i8* %41, i8** %45, align 8
  %46 = load i8*, i8** %2, align 8
  store i8 0, i8* %46, align 1
  %47 = load i32, i32* %number, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %number, align 4
  %49 = load i32, i32* %number, align 4
  store i32 %49, i32* %1, align 4
  %52 = load i8*, i8** %2, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %2, align 8
