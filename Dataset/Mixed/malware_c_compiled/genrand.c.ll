  %270 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %271 = call i32 @getgid() #5
  %274 = shl i32 %272, 16
  %275 = zext i32 %274 to i64
  call void @ssh_random_xor_noise(%struct.SshRandomStateRec* %270, i64 10, i64 %275)
  %183 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %184 = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i32 0, i32 9
  %185 = bitcast %union.anon* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %struct.rusage, %struct.rusage* %cru, i32 0, i32 9
  %188 = bitcast %union.anon* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = add nsw i64 %186, %189
  call void @ssh_random_xor_noise(%struct.SshRandomStateRec* %183, i64 11, i64 %190)
  %193 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %194 = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i32 0, i32 10
  %195 = bitcast %union.anon* %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %struct.rusage, %struct.rusage* %cru, i32 0, i32 10
  %198 = bitcast %union.anon* %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = add nsw i64 %196, %199
  call void @ssh_random_xor_noise(%struct.SshRandomStateRec* %193, i64 12, i64 %200)
  %263 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %264 = call i32 @getuid() #5
  %267 = zext i32 %265 to i64
  call void @ssh_random_xor_noise(%struct.SshRandomStateRec* %263, i64 10, i64 %267)
  %278 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %279 = call i32 @getpgrp() #5
  %35 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %36 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %37 = getelementptr inbounds %struct.SshRandomStateRec, %struct.SshRandomStateRec* %36, i32 0, i32 0
  %38 = getelementptr inbounds [1024 x i8], [1024 x i8]* %37, i64 0, i64 0
  %39 = load i8, i8* %38, align 8
  %40 = zext i8 %39 to i32
  %41 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %42 = getelementptr inbounds %struct.SshRandomStateRec, %struct.SshRandomStateRec* %41, i32 0, i32 0
  %43 = getelementptr inbounds [1024 x i8], [1024 x i8]* %42, i64 0, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = mul nsw i32 256, %45
  %47 = add nsw i32 %40, %46
  %48 = sext i32 %47 to i64
  %49 = urem i64 %48, 256
  %50 = call i64 @ssh_time()
  call void @ssh_random_xor_noise(%struct.SshRandomStateRec* %35, i64 %50, i64 %51)
  %173 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  %174 = getelementptr inbounds %struct.rusage, %struct.rusage* %ru, i32 0, i32 8
  %175 = bitcast %union.anon* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %struct.rusage, %struct.rusage* %cru, i32 0, i32 8
  %178 = bitcast %union.anon* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = add nsw i64 %176, %179
  call void @ssh_random_xor_noise(%struct.SshRandomStateRec* %173, i64 10, i64 %180)
  %282 = sext i32 %280 to i64
  call void @ssh_random_xor_noise(%struct.SshRandomStateRec* %278, i64 10, i64 %282)
store %struct.SshRandomStateRec* %23, %struct.SshRandomStateRec** %state, align 8
store  i64 %37, i64* %i, align 8
store  i64 %38, i64* %value, align 8
  %1 = alloca %struct.SshRandomStateRec*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store %struct.SshRandomStateRec* %state, %struct.SshRandomStateRec** %1, align 8
  store i64 %i, i64* %2, align 8
  store i64 %value, i64* %3, align 8
  %4 = load i64, i64* %2, align 8
  %5 = mul i64 4, %4
  %6 = icmp uge i64 %5, 1024
  call void (i8*, ...) @ssh_fatal(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i32 0, i32 0))
  %285 = load %struct.SshRandomStateRec*, %struct.SshRandomStateRec** %1, align 8
  call void @ssh_random_xor_noise(%struct.SshRandomStateRec* %285, i64 13, i64 1638400)
  %10 = load i64, i64* %3, align 8
  %11 = icmp ugt i64 %10, 0
