@nodekey = common global %struct.RSA_secret_key zeroinitializer, align 8
@iobuf_debug_mode = common global i32 0, align 4
@memory_debug_mode = common global i32 0, align 4
@memory_stat_debug_mode = common global i32 0, align 4
@mpi_debug_mode = common global i32 0, align 4
define void @issl_init_global(i32 %nbits) #0 {
  %38 = load %struct.issl_t*, %struct.issl_t** %2, align 8
  %39 = getelementptr inbounds %struct.issl_t, %struct.issl_t* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds [2048 x i8], [2048 x i8]* %raw1, i32 0, i32 0
  %42 = call i64 @read(i32 %40, i8* %41, i64 2048)
  store i32 %61, i32* %rs, align 4
  %63 = load %struct.issl_t*, %struct.issl_t** %2, align 8
  %64 = getelementptr inbounds %struct.issl_t, %struct.issl_t* %63, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds [2048 x i8], [2048 x i8]* %raw2, i32 0, i32 0
  %67 = load i32, i32* %rs, align 4
  %68 = sext i32 %67 to i64
  %69 = call i64 @write(i32 %65, i8* %66, i64 %68)
  %1 = alloca i32, align 4
  store i32 %nbits, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = icmp slt i32 %2, 1536
  call void (i8*, ...) @rsa_log_fatal(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i32 0, i32 0))
  %8 = load i32, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca %struct.issl_t*, align 8
  %peerkey = alloca %struct.RSA_public_key, align 8
  %msg = alloca %struct.gcry_mpi*, align 8
  %msg2 = alloca %struct.gcry_mpi*, align 8
  %reply = alloca %struct.gcry_mpi*, align 8
  %raw1 = alloca [2048 x i8], align 16
  %raw2 = alloca [2048 x i8], align 16
  %rs = alloca i32, align 4
  %rks1 = alloca i32, align 4
  %rks2 = alloca i32, align 4
  store %struct.issl_t* %q, %struct.issl_t** %2, align 8
  %4 = icmp ne %struct.gcry_mpi* %3, null
  %10 = icmp ne i32 %8, 0
  call void (i8*, ...) @rsa_log_fatal(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  %16 = getelementptr inbounds [2048 x i8], [2048 x i8]* %raw1, i32 0, i32 0
  %17 = call i32 @mpi2raw(%struct.gcry_mpi* %15, i8* %16)
  store i32 %18, i32* %rs, align 4
  %20 = load %struct.issl_t*, %struct.issl_t** %2, align 8
  %21 = getelementptr inbounds %struct.issl_t, %struct.issl_t* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds [2048 x i8], [2048 x i8]* %raw1, i32 0, i32 0
  %24 = load i32, i32* %rs, align 4
  %25 = sext i32 %24 to i64
  %26 = call i64 @write(i32 %22, i8* %23, i64 %25)
  %29 = load i32, i32* %rs, align 4
  %30 = sext i32 %29 to i64
  %31 = icmp ne i64 %27, %30
  call void (i8*, ...) @rsa_log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0))
  store i32 -1, i32* %1, align 4
  %72 = load i32, i32* %rs, align 4
  %73 = sext i32 %72 to i64
  %74 = icmp ne i64 %70, %73
  %34 = getelementptr inbounds %struct.RSA_public_key, %struct.RSA_public_key* %peerkey, i32 0, i32 0
  store %struct.gcry_mpi* %32, %struct.gcry_mpi** %34, align 8
  %36 = getelementptr inbounds [2048 x i8], [2048 x i8]* %raw1, i32 0, i32 0
  %37 = call i32 @mpi2raw(%struct.gcry_mpi* %35, i8* %36)
