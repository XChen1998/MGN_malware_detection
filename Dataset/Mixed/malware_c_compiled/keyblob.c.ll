  %69 = phi i1 [ true, %47 ], [ %66, %65 ]
  %70 = zext i1 %69 to i32
  store i32 %70, i32* %escaped, align 4
  %71 = load i8**, i8*** %1, align 8
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %71, align 8
  %76 = load i8**, i8*** %1, align 8
  %77 = load i8*, i8** %76, align 8
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = sext i32 %79 to i64
  %81 = call i16** @__ctype_b_loc() #7
  %19 = load i32, i32* %escaped, align 4
  %20 = icmp ne i32 %19, 0
  %23 = phi i1 [ true, %15 ], [ %21, %18 ]
  %59 = load i8**, i8*** %1, align 8
  %60 = load i8*, i8** %59, align 8
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %62, 13
  %66 = phi i1 [ false, %54 ], [ %64, %58 ]
  %84 = phi i64 [ %100, %92 ], [ %81, %75 ]
  %85 = phi i16** [ %101, %92 ], [ %82, %75 ]
  %86 = load i16*, i16** %85, align 8
  %87 = getelementptr inbounds i16, i16* %86, i64 %84
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = and i32 %89, 8192
  %91 = icmp ne i32 %90, 0
  %22 = load i8*, i8** %2, align 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 45
  %28 = load i8*, i8** %2, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 95
  %16 = icmp ne i32 %14, 0
  %94 = load i8**, i8*** %1, align 8
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %94, align 8
  %97 = load i8**, i8*** %1, align 8
  %98 = load i8*, i8** %97, align 8
  %99 = load i8, i8* %98, align 1
  %100 = sext i8 %99 to i32
  %101 = sext i32 %100 to i64
  %102 = call i16** @__ctype_b_loc() #7
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %max = alloca i32, align 4
  store i8* %src, i8** %1, align 8
  store i8* %dest, i8** %2, align 8
  store i64 %len, i64* %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = call i64 @strlen(i8* %4) #6
  %8 = trunc i64 %6 to i32
  store i32 %8, i32* %max, align 4
  %9 = load i32, i32* %max, align 4
  %10 = icmp eq i32 %9, 0
  %14 = load i16*, i16** %12, align 8
  %15 = getelementptr inbounds i16, i16* %14, i64 %11
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = and i32 %17, 8
  %19 = icmp ne i32 %18, 0
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %blob = alloca i8*, align 8
  %blob2 = alloca i8*, align 8
  %base64blob = alloca i8*, align 8
  %crc64blob = alloca i8*, align 8
  %number = alloca i32, align 4
  %base64blob_len = alloca i64, align 8
  %crc64blob_len = alloca i64, align 8
  %p = alloca i8*, align 8
  %compare = alloca i8*, align 8
  %again = alloca i8*, align 8
  %headers_beg = alloca i8*, align 8
  %headers_end = alloca i8*, align 8
  %p2 = alloca i8*, align 8
  %public = alloca i32, align 4
  %crc32 = alloca i64, align 8
  store i8* %str, i8** %2, align 8
  store i64* %blob_len, i64** %3, align 8
  store i8** %headers, i8*** %4, align 8
  store i32* %version_major, i32** %5, align 8
  store i32* %version_minor, i32** %6, align 8
  store i32* %is_public, i32** %7, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = icmp ne i32* %8, null
