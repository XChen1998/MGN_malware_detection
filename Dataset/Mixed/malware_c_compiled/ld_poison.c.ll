@old_fxstat = internal global i32 (i32, i32, %struct.stat*)* null, align 8
@old_fxstat64 = internal global i32 (i32, i32, %struct.stat64*)* null, align 8
@old_lxstat = internal global i32 (i32, i8*, %struct.stat*)* null, align 8
@old_lxstat64 = internal global i32 (i32, i8*, %struct.stat64*)* null, align 8
@old_open = internal global i32 (i8*, i32, i32)* null, align 8
@old_rmdir = internal global i32 (i8*)* null, align 8
@old_unlink = internal global i32 (i8*)* null, align 8
@old_unlinkat = internal global i32 (i32, i8*, i32)* null, align 8
@old_xstat = internal global i32 (i32, i8*, %struct.stat*)* null, align 8
@old_xstat64 = internal global i32 (i32, i8*, %struct.stat64*)* null, align 8
@old_fdopendir = internal global %struct.__dirstream* (i32)* null, align 8
@old_opendir = internal global %struct.__dirstream* (i8*)* null, align 8
@old_readdir = internal global %struct.dirent* (%struct.__dirstream*)* null, align 8
@old_readdir64 = internal global %struct.dirent64* (%struct.__dirstream*)* null, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @init, i8* null }]
  store i32 %29, i32* %1, align 4
  %48 = bitcast i8* %46 to %struct.__dirstream* (i8*)*
  store %struct.__dirstream* (i8*)* %48, %struct.__dirstream* (i8*)** @old_opendir, align 8
  %49 = call i8* @dlsym(i8* inttoptr (i64 -1 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0)) #6
  %52 = bitcast i8* %50 to %struct.dirent* (%struct.__dirstream*)*
  store %struct.dirent* (%struct.__dirstream*)* %52, %struct.dirent* (%struct.__dirstream*)** @old_readdir, align 8
  %53 = call i8* @dlsym(i8* inttoptr (i64 -1 to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0)) #6
  %56 = bitcast i8* %54 to %struct.dirent* (%struct.__dirstream*)*
  store %struct.dirent* (%struct.__dirstream*)* %56, %struct.dirent* (%struct.__dirstream*)** @old_readdir64, align 8
  %7 = load i32 (i32, i32, %struct.stat*)*, i32 (i32, i32, %struct.stat*)** @old_fxstat, align 8
  %8 = load i32, i32* %2, align 4
  %9 = call i32 %7(i32 1, i32 %8, %struct.stat* %s_fstat)
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %s_fstat, i32 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 90
  store i32 2, i32* %18, align 4
  store i32 -1, i32* %1, align 4
  %22 = load i32 (i32, i32, %struct.stat*)*, i32 (i32, i32, %struct.stat*)** @old_fxstat, align 8
  %23 = load i32, i32* %2, align 4
  %24 = load %struct.stat*, %struct.stat** %3, align 8
  %25 = call i32 %22(i32 1, i32 %23, %struct.stat* %24)
  %30 = load i32, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.stat*, align 8
  %s_fstat = alloca %struct.stat, align 8
  store i32 %fd, i32* %2, align 4
  store %struct.stat* %buf, %struct.stat** %3, align 8
  %4 = bitcast %struct.stat* %s_fstat to i8*
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 1, i32 8, i1 false)
  %7 = load i32 (i32, i32, %struct.stat*)*, i32 (i32, i32, %struct.stat*)** @old_fxstat64, align 8
  %8 = load i32, i32* %2, align 4
  %9 = call i32 %7(i32 1, i32 %8, %struct.stat* %s_fstat)
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %s_fstat, i32 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 90
