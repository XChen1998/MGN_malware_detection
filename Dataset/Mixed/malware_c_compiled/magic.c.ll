@stdout = external global %struct._IO_FILE*, align 8
  %1 = alloca i32, align 4
  %b = alloca [80 x i8], align 16
  %a = alloca i8*, align 8
  %fd = alloca %struct._IO_FILE*, align 8
  store i32 0, i32* %1, align 4
  %2 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  store %struct._IO_FILE* %3, %struct._IO_FILE** %fd, align 8
  %5 = icmp eq %struct._IO_FILE* %3, null
  %13 = getelementptr inbounds [80 x i8], [80 x i8]* %b, i32 0, i32 0
  store i8* %13, i8** %a, align 8
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0))
  %17 = load i8*, i8** %a, align 8
  %18 = call signext i8 @getlinel(i8* %17, i32 10)
  %1 = alloca i8, align 1
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %line, i8** %2, align 8
  store i32 %len, i32* %3, align 4
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %5 = call i32 @fflush(%struct._IO_FILE* %4)
  store i32 0, i32* %j, align 4
  %10 = load i32, i32* %j, align 4
  %11 = load i32, i32* %3, align 4
  %12 = sub nsw i32 %11, 1
  %13 = icmp slt i32 %10, %12
  %16 = load i8*, i8** %2, align 8
  %17 = load i32, i32* %j, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = call i32 (i32, i8*, i32, ...) bitcast (i32 (...)* @read to i32 (i32, i8*, i32, ...)*)(i32 0, i8* %19, i32 1)
  %23 = icmp eq i32 %21, 0
  %32 = load i32, i32* %j, align 4
  %33 = sext i32 %32 to i64
  %34 = load i8*, i8** %2, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp eq i32 %37, 13
  %43 = load i32, i32* %j, align 4
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %2, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 10
  %58 = load i32, i32* %j, align 4
  %59 = sext i32 %58 to i64
  %60 = load i8*, i8** %2, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = icmp eq i32 %63, 8
  %71 = load i32, i32* %j, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %j, align 4
  %10 = load i32, i32* %j, align 4
  %11 = load i32, i32* %3, align 4
  %12 = sub nsw i32 %11, 1
  %13 = icmp slt i32 %10, %12
  %16 = load i8*, i8** %2, align 8
  %17 = load i32, i32* %j, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = call i32 (i32, i8*, i32, ...) bitcast (i32 (...)* @read to i32 (i32, i8*, i32, ...)*)(i32 0, i8* %19, i32 1)
  %23 = icmp eq i32 %21, 0
  %32 = load i32, i32* %j, align 4
  %33 = sext i32 %32 to i64
  %34 = load i8*, i8** %2, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp eq i32 %37, 13
  %43 = load i32, i32* %j, align 4
  %44 = sext i32 %43 to i64
  %45 = load i8*, i8** %2, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 10
  %52 = load i32, i32* %j, align 4
  %53 = sext i32 %52 to i64
  %54 = load i8*, i8** %2, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8 0, i8* %55, align 1
  store i8 0, i8* %1, align 1
  %83 = load i8, i8* %1, align 1
  %21 = load i8*, i8** %a, align 8
  %22 = call i32 @code(i8* %21)
store i8* %11, i8** %a, align 8
  %1 = alloca i8*, align 8
  store i8* %a, i8** %1, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  %7 = icmp ne i32 %6, 0
  %10 = load i8*, i8** %1, align 8
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = xor i32 %12, -1
  %14 = trunc i32 %13 to i8
  %15 = load i8*, i8** %1, align 8
  store i8 %14, i8* %15, align 1
  %16 = load i8*, i8** %1, align 8
  %17 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %17, i8** %1, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  %7 = icmp ne i32 %6, 0
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %fd, align 8
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0))
  %29 = load i8*, i8** %a, align 8
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %fd, align 8
  %36 = load i8*, i8** %a, align 8
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i32 %38)
  %42 = load i8*, i8** %a, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %a, align 8
  %29 = load i8*, i8** %a, align 8
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %fd, align 8
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0))
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %fd, align 8
  %51 = call i32 @fclose(%struct._IO_FILE* %50)
