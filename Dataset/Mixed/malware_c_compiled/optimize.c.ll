@cur_mark = internal global i32 0, align 4
@fstart = internal global %struct.bpf_insn* null, align 8
@ftail = internal global %struct.bpf_insn* null, align 8
@blocks = common global %struct.block** null, align 8
@edges = common global %struct.edge** null, align 8
@levels = common global %struct.block** null, align 8
@space = common global i32* null, align 8
@vmap = common global %struct.vmapinfo* null, align 8
@vnode_base = common global %struct.valnode* null, align 8
@next_vnode = common global %struct.valnode* null, align 8
@done = internal global i32 0, align 4
@n_blocks = internal global i32 0, align 4
@all_dom_sets = internal global i32* null, align 8
@nodewords = internal global i32 0, align 4
@all_closure_sets = internal global i32* null, align 8
@all_edge_sets = internal global i32* null, align 8
@n_edges = internal global i32 0, align 4
@edgewords = internal global i32 0, align 4
@curval = internal global i32 0, align 4
@maxval = internal global i32 0, align 4
@hashtbl = internal global [213 x %struct.valnode*] zeroinitializer, align 16
  %1 = alloca %struct.slist*, align 8
  %n = alloca i32, align 4
  store %struct.slist* %s, %struct.slist** %1, align 8
  store i32 0, i32* %n, align 4
  %7 = load %struct.block*, %struct.block** %2, align 8
  %8 = getelementptr inbounds %struct.block, %struct.block* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = load i32, i32* @cur_mark, align 4
  %11 = icmp eq i32 %9, %10
  store i32 0, i32* %1, align 4
  %15 = load i32, i32* @cur_mark, align 4
  %16 = load %struct.block*, %struct.block** %1, align 8
  %17 = getelementptr inbounds %struct.block, %struct.block* %16, i32 0, i32 3
  store i32 %15, i32* %17, align 8
  %18 = load i32, i32* @n_blocks, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @n_blocks, align 4
  store i32 %18, i32* %n, align 4
  %20 = load i32, i32* %n, align 4
  %21 = load %struct.block*, %struct.block** %1, align 8
  %22 = getelementptr inbounds %struct.block, %struct.block* %21, i32 0, i32 0
  store i32 %20, i32* %22, align 8
  %23 = load %struct.block*, %struct.block** %1, align 8
  %24 = load i32, i32* %n, align 4
  %25 = sext i32 %24 to i64
  %26 = load %struct.block**, %struct.block*** @blocks, align 8
  %27 = getelementptr inbounds %struct.block*, %struct.block** %26, i64 %25
  store %struct.block* %23, %struct.block** %27, align 8
  %28 = load %struct.block*, %struct.block** %1, align 8
  %29 = getelementptr inbounds %struct.block, %struct.block* %28, i32 0, i32 9
  %30 = getelementptr inbounds %struct.edge, %struct.edge* %29, i32 0, i32 3
  %31 = load %struct.block*, %struct.block** %30, align 8
  call void @number_blks_r(%struct.block* %31)
  %34 = load %struct.block*, %struct.block** %1, align 8
  %35 = getelementptr inbounds %struct.block, %struct.block* %34, i32 0, i32 10
  %36 = getelementptr inbounds %struct.edge, %struct.edge* %35, i32 0, i32 3
  %37 = load %struct.block*, %struct.block** %36, align 8
  call void @number_blks_r(%struct.block* %37)
  %4 = load %struct.slist*, %struct.slist** %1, align 8
  %5 = icmp ne %struct.slist* %4, null
  %66 = load i32, i32* %i, align 4
  %67 = load i32, i32* %n, align 4
  %68 = icmp slt i32 %66, %67
  %71 = load i32*, i32** %p, align 8
  %72 = load i32, i32* %i, align 4
  %73 = sext i32 %72 to i64
  %74 = load %struct.block**, %struct.block*** @blocks, align 8
  %75 = getelementptr inbounds %struct.block*, %struct.block** %74, i64 %73
  %76 = load %struct.block*, %struct.block** %75, align 8
  %77 = getelementptr inbounds %struct.block, %struct.block* %76, i32 0, i32 13
  store i32* %71, i32** %77, align 8
  %78 = load i32, i32* @nodewords, align 4
  %79 = load i32*, i32** %p, align 8
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds i32, i32* %79, i64 %80
  store i32* %81, i32** %p, align 8
  %1 = alloca i32, align 4
  %2 = alloca %struct.block*, align 8
  store %struct.block* %p, %struct.block** %2, align 8
  %3 = load %struct.block*, %struct.block** %2, align 8
  %4 = icmp eq %struct.block* %3, null
  %8 = load %struct.slist*, %struct.slist** %1, align 8
  %9 = getelementptr inbounds %struct.slist, %struct.slist* %8, i32 0, i32 0
  %10 = getelementptr inbounds %struct.stmt, %struct.stmt* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, -1
  %1 = alloca %struct.block**, align 8
  %root = alloca %struct.block*, align 8
  store %struct.block** %rootp, %struct.block*** %1, align 8
  %2 = load %struct.block**, %struct.block*** %1, align 8
  %3 = load %struct.block*, %struct.block** %2, align 8
  store %struct.block* %3, %struct.block** %root, align 8
  %4 = load %struct.block*, %struct.block** %root, align 8
  call void @opt_init(%struct.block* %4)
  %7 = load %struct.block*, %struct.block** %root, align 8
  call void @opt_loop(%struct.block* %7, i32 0)
  %61 = bitcast i8* %59 to i32*
  store i32* %61, i32** @space, align 8
  %62 = load i32*, i32** @space, align 8
  store i32* %62, i32** %p, align 8
  %63 = load i32*, i32** %p, align 8
  store i32* %63, i32** @all_dom_sets, align 8
  store i32 0, i32* %i, align 4
  %15 = load i32, i32* %n, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %n, align 4
  %21 = load %struct.slist*, %struct.slist** %1, align 8
  %22 = getelementptr inbounds %struct.slist, %struct.slist* %21, i32 0, i32 1
  %23 = load %struct.slist*, %struct.slist** %22, align 8
  store %struct.slist* %23, %struct.slist** %1, align 8
