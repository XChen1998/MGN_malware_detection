@stderr = external global %struct._IO_FILE*, align 8
@rndstats = internal global %struct.anon zeroinitializer, align 8
@secure_alloc = internal global i32 0, align 4
@quick_test = internal global i32 0, align 4
@faked_rng = internal global i32 0, align 4
@is_initialized = internal global i32 0, align 4
@seed_file_name = internal global i8* null, align 8
@pool_filled = internal global i32 0, align 4
@allow_seed_file_update = internal global i32 0, align 4
@keypool = internal global i8* null, align 8
@rndpool = internal global i8* null, align 8
@fast_random_poll.fnc = internal global void (void (i8*, i64, i32)*, i32)* null, align 8
@fast_random_poll.initialized = internal global i32 0, align 4
@iobuf_debug_mode = common global i32 0, align 4
@memory_debug_mode = common global i32 0, align 4
@memory_stat_debug_mode = common global i32 0, align 4
@mpi_debug_mode = common global i32 0, align 4
@did_initial_extra_seeding = internal global i32 0, align 4
@pool_balance = internal global i32 0, align 4
@just_mixed = internal global i32 0, align 4
@pool_readpos = internal global i64 0, align 8
@pool_writepos = internal global i64 0, align 8
@read_random_source.fnc = internal global i32 (void (i8*, i64, i32)*, i32, i64, i32)* null, align 8
@gather_faked.initialized = internal global i32 0, align 4
  %14 = load i32 (void (i8*, i64, i32)*, i32, i64, i32)*, i32 (void (i8*, i64, i32)*, i32, i64, i32)** @read_random_source.fnc, align 8
  %15 = icmp ne i32 (void (i8*, i64, i32)*, i32, i64, i32)* %14, null
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 0), align 8
  %3 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 2), align 8
  %4 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 3), align 8
  %5 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 9), align 8
  %6 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 8), align 8
  %7 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 1), align 8
  %8 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 5), align 8
  %9 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 4), align 8
  %10 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 7), align 8
  %11 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @rndstats, i32 0, i32 6), align 8
  %12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str, i32 0, i32 0), i32 600, i64 %2, i64 %3, i64 %4, i64 %5, i64 %6, i64 %7, i64 %8, i64 %9, i64 %10, i64 %11)
  store i32 1, i32* @secure_alloc, align 4
  %1 = alloca i32, align 4
  %last = alloca i32, align 4
  store i32 %onoff, i32* %1, align 4
  call void @read_random_source(i32 0, i64 0, i32 0)
  %4 = load i32, i32* @quick_test, align 4
  store i32 %4, i32* %last, align 4
  %5 = load i32, i32* %1, align 4
  %6 = icmp ne i32 %5, -1
  %9 = load i32, i32* %1, align 4
  store i32 %9, i32* @quick_test, align 4
  %12 = load i32, i32* @faked_rng, align 4
  %13 = icmp ne i32 %12, 0
  %18 = load i32, i32* %last, align 4
  %21 = phi i32 [ 1, %15 ], [ %18, %17 ]
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  store i32 %requester, i32* %1, align 4
  store i64 %length, i64* %2, align 8
  store i32 %level, i32* %3, align 4
  %4 = load i32 (void (i8*, i64, i32)*, i32, i64, i32)*, i32 (void (i8*, i64, i32)*, i32, i64, i32)** @read_random_source.fnc, align 8
  %5 = icmp ne i32 (void (i8*, i64, i32)*, i32, i64, i32)* %4, null
  %8 = load i32, i32* @is_initialized, align 4
  %9 = icmp ne i32 %8, 0
  call void @initialize()
  %36 = load i32 (void (i8*, i64, i32)*, i32, i64, i32)*, i32 (void (i8*, i64, i32)*, i32, i64, i32)** @read_random_source.fnc, align 8
  %37 = load i32, i32* %1, align 4
  %38 = load i64, i64* %2, align 8
  %39 = load i32, i32* %3, align 4
  %40 = call i32 %36(void (i8*, i64, i32)* @add_randomness, i32 %37, i64 %38, i32 %39)
  %56 = load i8*, i8** %pp, align 8
  %57 = load i8*, i8** %pend, align 8
  %58 = icmp uge i8* %56, %57
