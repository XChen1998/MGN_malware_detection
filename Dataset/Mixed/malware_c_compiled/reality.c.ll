@libc = common global i8* null, align 8
@old_accept = internal global i32 (i32, %struct.sockaddr*, i32*)* null, align 8
@old_fopen = internal global %struct._IO_FILE* (i8*, i8*)* null, align 8
@old_fopen64 = internal global %struct._IO_FILE* (i8*, i8*)* null, align 8
@old_fxstat = internal global i32 (i32, i32, %struct.stat*)* null, align 8
@old_fxstat64 = internal global i32 (i32, i32, %struct.stat64*)* null, align 8
@old_lxstat = internal global i32 (i32, i8*, %struct.stat*)* null, align 8
@old_lxstat64 = internal global i32 (i32, i8*, %struct.stat64*)* null, align 8
@old_open = internal global i32 (i8*, i32, i32)* null, align 8
@old_rmdir = internal global i32 (i8*)* null, align 8
@old_xstat = internal global i32 (i32, i8*, %struct.stat*)* null, align 8
@old_xstat64 = internal global i32 (i32, i8*, %struct.stat64*)* null, align 8
@old_unlink = internal global i32 (i8*)* null, align 8
@old_unlinkat = internal global i32 (i32, i8*, i32)* null, align 8
@old_fdopendir = internal global %struct.__dirstream* (i32)* null, align 8
@old_opendir = internal global %struct.__dirstream* (i8*)* null, align 8
@old_readdir = internal global %struct.dirent* (%struct.__dirstream*)* null, align 8
@old_readdir64 = internal global %struct.dirent64* (%struct.__dirstream*)* null, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @init, i8* null }]
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.stat*, align 8
  store i32 %ver, i32* %1, align 4
  store i32 %fildes, i32* %2, align 4
  store %struct.stat* %buf, %struct.stat** %3, align 8
  %4 = load i8*, i8** @libc, align 8
  %5 = icmp ne i8* %4, null
  store i8* %8, i8** @libc, align 8
  %12 = load %struct._IO_FILE* (i8*, i8*)*, %struct._IO_FILE* (i8*, i8*)** @old_fopen, align 8
  %13 = icmp ne %struct._IO_FILE* (i8*, i8*)* %12, null
  %16 = load i8*, i8** @libc, align 8
  %17 = call i8* @dlsym(i8* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)) #3
  %23 = load %struct._IO_FILE* (i8*, i8*)*, %struct._IO_FILE* (i8*, i8*)** @old_fopen, align 8
  %24 = load i8*, i8** %1, align 8
  %25 = load i8*, i8** %2, align 8
  %26 = call %struct._IO_FILE* %23(i8* %24, i8* %25)
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %filename, i8** %1, align 8
  store i8* %mode, i8** %2, align 8
  %3 = load i8*, i8** @libc, align 8
  %4 = icmp ne i8* %3, null
  store i8* %8, i8** @libc, align 8
  %12 = load %struct._IO_FILE* (i8*, i8*)*, %struct._IO_FILE* (i8*, i8*)** @old_fopen64, align 8
  %13 = icmp ne %struct._IO_FILE* (i8*, i8*)* %12, null
  %20 = bitcast i8* %18 to %struct._IO_FILE* (i8*, i8*)*
  store %struct._IO_FILE* (i8*, i8*)* %20, %struct._IO_FILE* (i8*, i8*)** @old_fopen64, align 8
  %23 = load %struct._IO_FILE* (i8*, i8*)*, %struct._IO_FILE* (i8*, i8*)** @old_fopen64, align 8
  %24 = load i8*, i8** %1, align 8
  %25 = load i8*, i8** %2, align 8
  %26 = call %struct._IO_FILE* %23(i8* %24, i8* %25)
  %1 = alloca i32, align 4
  %2 = alloca %struct.stat*, align 8
  store i32 %fd, i32* %1, align 4
  store %struct.stat* %buf, %struct.stat** %2, align 8
  %3 = load i8*, i8** @libc, align 8
  %4 = icmp ne i8* %3, null
  %7 = call i8* @dlopen(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), i32 1) #3
