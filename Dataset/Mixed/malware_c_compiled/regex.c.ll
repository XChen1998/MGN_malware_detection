@re_syntax_options = common global i32 0, align 4
@re_max_failures = global i32 20000, align 4
@re_syntax_table = internal global [256 x i8] zeroinitializer, align 16
@re_error_msgid = internal global [17 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i32 0, i32 0)], align 16
@reg_unset_dummy = internal global i8 0, align 1
@init_syntax_once.done = internal global i32 0, align 4
  %260 = load i32, i32* %j, align 4
  %261 = add nsw i32 %260, 1
  store i32 %261, i32* %j, align 4
  store i32 0, i32* %j, align 4
  %212 = load i32, i32* %j, align 4
  %213 = icmp slt i32 %212, 256
  %244 = load i32, i32* %j, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = sext i8 %247 to i32
  %249 = icmp ne i32 %248, 1
  %252 = load i32, i32* %j, align 4
  %253 = sext i32 %252 to i64
  %254 = load i8*, i8** %fastmap, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 %253
  store i8 1, i8* %255, align 1
  %95 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %2, align 8
  %96 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %95, i32 0, i32 7
  %97 = load i8, i8* %96, align 8
  %98 = and i8 %97, -2
  %99 = or i8 %98, 1
  store i8 %99, i8* %96, align 8
  %102 = load i8*, i8** %p, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 1
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = load i8*, i8** %fastmap, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 %105
  store i8 1, i8* %107, align 1
  %266 = load i8*, i8** %fastmap, align 8
  %267 = getelementptr inbounds i8, i8* %266, i64 10
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  store i32 %269, i32* %fastmap_newline, align 4
  store i32 0, i32* %j, align 4
  %1 = alloca i32, align 4
  store i32 %syntax, i32* %1, align 4
  %2 = load i32, i32* @re_syntax_options, align 4
  %3 = load i32, i32* %1, align 4
  store i32 %3, i32* @re_syntax_options, align 4
store %struct.re_pattern_buffer* %79, %struct.re_pattern_buffer** %bufp, align 8
  %1 = alloca i32, align 4
  %2 = alloca %struct.re_pattern_buffer*, align 8
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %fail_stack = alloca %struct.fail_stack_type, align 8
  %destination = alloca i8*, align 8
  %num_regs = alloca i32, align 4
  %fastmap = alloca i8*, align 8
  %pattern = alloca i8*, align 8
  %size = alloca i64, align 8
  %p = alloca i8*, align 8
  %pend = alloca i8*, align 8
  %path_can_be_null = alloca i8, align 1
  %succeed_n_p = alloca i8, align 1
  %fastmap_newline = alloca i32, align 4
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %2, align 8
  store i32 0, i32* %num_regs, align 4
  %3 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %2, align 8
  %4 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3, i32 0, i32 4
  %5 = load i8*, i8** %4, align 8
  store i8* %5, i8** %fastmap, align 8
  %6 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %2, align 8
  %7 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %pattern, align 8
  %9 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %2, align 8
  %10 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %9, i32 0, i32 2
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %size, align 8
  %12 = load i8*, i8** %pattern, align 8
  store i8* %12, i8** %p, align 8
  %13 = load i8*, i8** %pattern, align 8
  %14 = load i64, i64* %size, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  store i8* %15, i8** %pend, align 8
  store i8 1, i8* %path_can_be_null, align 1
  store i8 0, i8* %succeed_n_p, align 1
  %89 = load i8*, i8** %p, align 8
  %90 = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %90, i8** %p, align 8
  %91 = load i8, i8* %89, align 1
  %92 = zext i8 %91 to i32
  switch i32 %92, label %501 [
    i32 8, label %93
    i32 2, label %99
    i32 4, label %106
    i32 5, label %139
    i32 24, label %188
    i32 25, label %209
    i32 3, label %230
    i32 0, label %267
    i32 9, label %267
    i32 10, label %267
    i32 11, label %267
    i32 12, label %267
    i32 28, label %267
    i32 29, label %267
    i32 26, label %267
    i32 27, label %267
    i32 20, label %267
    i32 22, label %268
    i32 17, label %268
    i32 18, label %268
    i32 13, label %268
    i32 14, label %268
    i32 19, label %268
    i32 15, label %348
    i32 16, label %348
    i32 21, label %456
    i32 23, label %495
    i32 6, label %498
    i32 7, label %498
  ]
  %272 = load i32, i32* %j, align 4
  %273 = icmp slt i32 %272, 256
  %282 = load i32, i32* %j, align 4
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %j, align 4
