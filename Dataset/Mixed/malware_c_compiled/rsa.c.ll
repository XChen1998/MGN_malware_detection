@stdout = external global %struct._IO_FILE*, align 8
@iobuf_debug_mode = common global i32 0, align 4
@memory_debug_mode = common global i32 0, align 4
@memory_stat_debug_mode = common global i32 0, align 4
@mpi_debug_mode = common global i32 0, align 4
  %62 = load %struct.gcry_mpi*, %struct.gcry_mpi** %out2, align 8
  %63 = load %struct.gcry_mpi*, %struct.gcry_mpi** %out1, align 8
  call void @public(%struct.gcry_mpi* %62, %struct.gcry_mpi* %63, %struct.RSA_public_key* %pk)
  %82 = load %struct.gcry_mpi*, %struct.gcry_mpi** %out2, align 8
  call void @g10m_release(%struct.gcry_mpi* %82)
store %struct.RSA_secret_key* %96, %struct.RSA_secret_key** %sk, align 8
store  i32 %98, i32* %nbits, align 8
  %2 = alloca i32, align 4
  %pk = alloca %struct.RSA_public_key, align 8
  %test = alloca %struct.gcry_mpi*, align 8
  %out1 = alloca %struct.gcry_mpi*, align 8
  %out2 = alloca %struct.gcry_mpi*, align 8
  %p = alloca i8*, align 8
  store i32 %nbits, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call %struct.gcry_mpi* @g10m_new(i32 %3)
  store %struct.gcry_mpi* %5, %struct.gcry_mpi** %test, align 8
  %7 = load i32, i32* %2, align 4
  %8 = call %struct.gcry_mpi* @g10m_new(i32 %7)
  store %struct.gcry_mpi* %9, %struct.gcry_mpi** %out1, align 8
  %11 = load i32, i32* %2, align 4
  %12 = call %struct.gcry_mpi* @g10m_new(i32 %11)
  store %struct.gcry_mpi* %13, %struct.gcry_mpi** %out2, align 8
  %17 = load %struct.gcry_mpi*, %struct.gcry_mpi** %16, align 8
  %18 = getelementptr inbounds %struct.RSA_public_key, %struct.RSA_public_key* %pk, i32 0, i32 0
  store %struct.gcry_mpi* %17, %struct.gcry_mpi** %18, align 8
  %21 = load %struct.gcry_mpi*, %struct.gcry_mpi** %20, align 8
  %22 = getelementptr inbounds %struct.RSA_public_key, %struct.RSA_public_key* %pk, i32 0, i32 1
  store %struct.gcry_mpi* %21, %struct.gcry_mpi** %22, align 8
  %23 = load i32, i32* %2, align 4
  %24 = zext i32 %23 to i64
  %25 = call i8* @get_random_bits(i64 %24, i32 0, i32 0)
  store i8* %26, i8** %p, align 8
  %28 = load %struct.gcry_mpi*, %struct.gcry_mpi** %test, align 8
  %29 = load i8*, i8** %p, align 8
  %30 = load i32, i32* %2, align 4
  %31 = add i32 %30, 7
  %32 = udiv i32 %31, 8
  call void @g10m_set_buffer(%struct.gcry_mpi* %28, i8* %29, i32 %32, i32 0)
  %35 = load i8*, i8** %p, align 8
  call void @free(i8* %35) #5
  %38 = load %struct.gcry_mpi*, %struct.gcry_mpi** %out1, align 8
  %39 = load %struct.gcry_mpi*, %struct.gcry_mpi** %test, align 8
  call void @public(%struct.gcry_mpi* %38, %struct.gcry_mpi* %39, %struct.RSA_public_key* %pk)
  %42 = load %struct.gcry_mpi*, %struct.gcry_mpi** %out2, align 8
  %43 = load %struct.gcry_mpi*, %struct.gcry_mpi** %out1, align 8
  %47 = load %struct.gcry_mpi*, %struct.gcry_mpi** %test, align 8
  %48 = load %struct.gcry_mpi*, %struct.gcry_mpi** %out2, align 8
  %49 = call i32 @g10m_cmp(%struct.gcry_mpi* %47, %struct.gcry_mpi* %48)
  %52 = icmp ne i32 %50, 0
  call void (i8*, ...) @rsa_log_fatal(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i32 0, i32 0))
  %57 = load %struct.gcry_mpi*, %struct.gcry_mpi** %out1, align 8
  %58 = load %struct.gcry_mpi*, %struct.gcry_mpi** %test, align 8
store %struct.gcry_mpi* %26, %struct.gcry_mpi** %output, align 8
store  %struct.gcry_mpi* %27, %struct.gcry_mpi** %input, align 8
store  %struct.RSA_public_key* %pk, %struct.RSA_public_key** %pkey, align 8
  %1 = alloca %struct.gcry_mpi*, align 8
  %2 = alloca %struct.gcry_mpi*, align 8
  %3 = alloca %struct.RSA_public_key*, align 8
  %x = alloca %struct.gcry_mpi*, align 8
  store %struct.gcry_mpi* %output, %struct.gcry_mpi** %1, align 8
  store %struct.gcry_mpi* %input, %struct.gcry_mpi** %2, align 8
  store %struct.RSA_public_key* %pkey, %struct.RSA_public_key** %3, align 8
  %4 = load %struct.gcry_mpi*, %struct.gcry_mpi** %1, align 8
  %5 = load %struct.gcry_mpi*, %struct.gcry_mpi** %2, align 8
  %6 = icmp eq %struct.gcry_mpi* %4, %5
  %127 = load %struct.gcry_mpi*, %struct.gcry_mpi** %t1, align 8
  call void @g10m_release(%struct.gcry_mpi* %127)
