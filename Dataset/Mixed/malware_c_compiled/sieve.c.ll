@ssh_sieve_bit_counts = global [256 x i8] calign 16
  %42 = load i64, i64* %p, align 8
  %43 = mul i64 %42, 2
  %44 = add i64 %43, 3
  store i64 %44, i64* %1, align 8
  %47 = load i64, i64* %p, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %p, align 8
  %34 = load i32, i32* %bits, align 4
  %35 = sub i32 32, %34
  %36 = zext i32 %35 to i64
  %37 = load i64, i64* %primes, align 8
  %38 = add i64 %37, %36
  store i64 %38, i64* %primes, align 8
  %41 = load i32, i32* %i, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %i, align 4
  store i64 0, i64* %1, align 8
  %30 = load i64, i64* %p, align 8
  %31 = udiv i64 %30, 32
  %32 = load i64*, i64** %3, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 %31
  %34 = load i64, i64* %33, align 8
  %35 = load i64, i64* %p, align 8
  %36 = and i64 %35, 31
  %37 = shl i64 1, %36
  %38 = and i64 %34, %37
  %39 = icmp ne i64 %38, 0
  %51 = load i64, i64* %1, align 8
  %57 = load i64, i64* %1, align 8
store i64* %39, i64** %table, align 8
store  i32 %42, i32* %len, align 8
  %1 = alloca i64*, align 8
  %2 = alloca i32, align 4
  %max = alloca i32, align 4
  %stop = alloca i64, align 8
  %k = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i64* %table, i64** %1, align 8
  store i32 %len, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = mul i32 %3, 32
  store i32 %4, i32* %max, align 4
  %5 = load i32, i32* %max, align 4
  %6 = zext i32 %5 to i64
  %7 = call i64 @ssh_sieve_sqrt_ui(i64 %6)
  %30 = load i64, i64* %w, align 8
  %31 = lshr i64 %30, 8
  store i64 %31, i64* %w, align 8
store i64* %4, i64** %table, align 8
store  i32 %7, i32* %len, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64*, align 8
  %3 = alloca i32, align 4
  %p = alloca i64, align 8
  store i64* %table, i64** %2, align 8
  store i32 %len, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = mul i32 %4, 32
  %6 = sub i32 %5, 1
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %p, align 8
store i64 %6, i64* %x, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %u1 = alloca i64, align 8
  %u2 = alloca i64, align 8
  store i64 %x, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %6 [
    i64 0, label %4
    i64 1, label %5
    i64 2, label %5
    i64 3, label %5
  ]
  store i64 0, i64* %1, align 8
  %54 = load i64, i64* %u1, align 8
  store i64 %54, i64* %1, align 8
  %10 = load i64, i64* %p, align 8
  %11 = icmp ne i64 %10, 0
  %26 = load i64, i64* %p, align 8
  %27 = mul i64 %26, 2
  %28 = add i64 %27, 3
  store i64 %28, i64* %1, align 8
