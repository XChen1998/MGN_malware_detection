#!/usr/bin/python

import networkx as nx
import glob
import numpy as np
import json
import os
import re
G = nx.Graph()
elist = [(6, 7, 1),(7, 6, 1),(8, 9, 1),(9, 8, 1),(9, 10, 256),(10, 9, 256),(10, 11, 1),(11, 10, 1),(11, 12, 1),(12, 11, 1),(16, 17, 1),(16, 17, 1),(17, 16, 1),(17, 16, 1),(18, 19, 1),(19, 18, 1),(19, 20, 256),(20, 19, 256),(20, 21, 1),(21, 20, 1),(24, 25, 1),(25, 24, 1),(26, 27, 1),(27, 26, 1),(27, 28, 256),(28, 27, 256),(28, 29, 1),(29, 28, 1),(29, 30, 1),(30, 29, 1),(31, 32, 1),(32, 31, 1),(32, 33, 256),(33, 32, 256),(33, 34, 1),(34, 33, 1),(34, 35, 1),(35, 34, 1),(36, 37, 1),(37, 36, 1),(38, 42, 256),(39, 43, 256),(40, 44, 256),(41, 47, 256),(42, 38, 256),(42, 50, 256),(43, 39, 256),(43, 48, 256),(43, 65, 256),(43, 70, 256),(43, 75, 256),(44, 40, 256),(44, 45, 256),(45, 44, 256),(45, 46, 1),(46, 45, 1),(46, 47, 256),(47, 41, 256),(47, 46, 256),(48, 43, 256),(48, 49, 1),(48, 49, 1),(49, 48, 1),(49, 48, 1),(50, 42, 256),(65, 43, 256),(65, 66, 1),(66, 65, 1),(66, 67, 256),(67, 66, 256),(67, 68, 1),(68, 67, 1),(68, 69, 1),(69, 68, 1),(70, 43, 256),(70, 71, 1),(71, 70, 1),(71, 72, 256),(72, 71, 256),(72, 73, 1),(73, 72, 1),(73, 74, 1),(74, 73, 1),(75, 43, 256),(75, 76, 1),(76, 75, 1),(76, 77, 256),(77, 76, 256),(77, 78, 1),(78, 77, 1),(78, 79, 1),(79, 78, 1)]
G.add_weighted_edges_from(elist)
r = nx.degree_assortativity_coefficient(G)
print("assortativity coefficient = %3.3f"%r)
if os.path.isfile("graphs.gpickle"):
	# Load the graphs from a file
	graphs = nx.read_gpickle("graphs.gpickle")

else:
	graphs = {}
# Define a regular expression pattern to match operators
op_pattern = re.compile(r"^.*?\s+(?P<op>[a-z]+)")
# Get the name of the current file
filename = os.path.basename(__file__)

# Print the filename
#print(filename.split("-"))
filell = filename.split("-")[0] + ".ll"
with open(filell, "r") as file:

	lines = file.readlines()

#print(lines)
for node in G.nodes():
	#print(node)
	#print(lines[node])
	match = op_pattern.match(lines[node])
	if match:
		operator = match.group("op")
		#print(operator)
		G.nodes[node]["operation"] = operator
graphs[filename.split("-")[0]] = G
nx.write_gpickle(graphs, "graphs.gpickle")
