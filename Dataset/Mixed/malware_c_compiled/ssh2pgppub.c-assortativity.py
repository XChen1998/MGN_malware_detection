#!/usr/bin/python

import networkx as nx
import glob
import numpy as np
import json
import os
import re
G = nx.Graph()
elist = [(0, 1, 1),(1, 0, 1),(3, 4, 256),(4, 3, 256),(4, 5, 1),(5, 4, 1),(5, 6, 1),(6, 5, 1),(7, 8, 1),(7, 8, 1),(8, 7, 1),(8, 7, 1),(9, 10, 1),(10, 9, 1),(11, 12, 1),(12, 11, 1),(13, 14, 1),(13, 14, 1),(14, 13, 1),(14, 13, 1),(15, 16, 1),(16, 15, 1),(17, 18, 1),(18, 17, 1),(18, 19, 256),(19, 18, 256),(19, 20, 1),(20, 19, 1),(21, 46, 256),(22, 47, 256),(23, 48, 256),(24, 49, 256),(25, 50, 256),(26, 51, 256),(27, 52, 256),(28, 53, 256),(30, 46, 256),(31, 47, 256),(32, 48, 256),(33, 49, 256),(34, 50, 256),(35, 51, 256),(36, 52, 256),(37, 53, 256),(40, 59, 1),(42, 60, 256),(45, 54, 256),(46, 21, 256),(46, 30, 256),(46, 55, 256),(47, 22, 256),(47, 31, 256),(47, 57, 256),(48, 23, 256),(48, 32, 256),(49, 24, 256),(49, 33, 256),(50, 25, 256),(50, 34, 256),(51, 26, 256),(51, 35, 256),(52, 27, 256),(52, 36, 256),(53, 28, 256),(53, 37, 256),(54, 45, 256),(55, 46, 256),(55, 56, 1),(55, 56, 1),(56, 55, 1),(56, 55, 1),(57, 47, 256),(57, 58, 1),(58, 57, 1),(58, 59, 1),(59, 40, 1),(59, 58, 1),(60, 42, 256),(60, 61, 1),(61, 60, 1)]
G.add_weighted_edges_from(elist)
r = nx.degree_assortativity_coefficient(G)
print("assortativity coefficient = %3.3f"%r)
if os.path.isfile("graphs.gpickle"):
	# Load the graphs from a file
	graphs = nx.read_gpickle("graphs.gpickle")

else:
	graphs = {}
# Define a regular expression pattern to match operators
op_pattern = re.compile(r"^.*?\s+(?P<op>[a-z]+)")
# Get the name of the current file
filename = os.path.basename(__file__)

# Print the filename
#print(filename.split("-"))
filell = filename.split("-")[0] + ".ll"
with open(filell, "r") as file:

	lines = file.readlines()

#print(lines)
for node in G.nodes():
	#print(node)
	#print(lines[node])
	match = op_pattern.match(lines[node])
	if match:
		operator = match.group("op")
		#print(operator)
		G.nodes[node]["operation"] = operator
graphs[filename.split("-")[0]] = G
nx.write_gpickle(graphs, "graphs.gpickle")
