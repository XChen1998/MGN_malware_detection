  %16 = load i8*, i8** %3, align 8
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp eq i32 %18, 46
  %22 = load i8*, i8** %3, align 8
  %23 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %23, i8** %3, align 8
  %33 = load i64*, i64** %4, align 8
  store i64 16, i64* %33, align 8
  %36 = load i64*, i64** %4, align 8
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, 4
  %8 = load i32, i32* %i, align 4
  %9 = icmp slt i32 %8, 4
  %12 = load i32, i32* %i, align 4
  %13 = icmp ne i32 %12, 0
  store i32 0, i32* %1, align 4
  %55 = load i32, i32* %num, align 4
  %56 = icmp slt i32 %55, 256
  %59 = phi i1 [ false, %48 ], [ false, %42 ], [ %57, %54 ]
  %28 = load i8*, i8** %3, align 8
  %29 = getelementptr inbounds %struct.SshIpAddr, %struct.SshIpAddr* %ipaddr, i32 0, i32 1
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %29, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %30, i64 16, i32 1, i1 false)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %i = alloca i32, align 4
  %num = alloca i32, align 4
  store i8* %address, i8** %2, align 8
  store i32 0, i32* %i, align 4
  %5 = load i32, i32* %i, align 4
  %6 = icmp slt i32 %5, 4
  %49 = load i8*, i8** %2, align 8
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp sle i32 %51, 57
  store i32 0, i32* %value, align 4
  %38 = load i8*, i8** %3, align 8
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp sle i32 %40, 57
