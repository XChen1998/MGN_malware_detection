  %33 = load i64, i64* %upper_port, align 8
  %34 = add i64 %33, -1
  store i64 %34, i64* %upper_port, align 8
  %37 = load i8*, i8** %3, align 8
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp ne i32 %39, 0
  %148 = load i8*, i8** %3, align 8
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = load i8*, i8** %2, align 8
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp ne i32 %150, %153
  store i32 0, i32* %1, align 4
  %25 = sext i32 %23 to i64
  store i64 %25, i64* %upper_port, align 8
  %26 = load i64, i64* %upper_port, align 8
  %27 = icmp eq i64 %26, 0
  %30 = load i8*, i8** %3, align 8
  call void (i8*, ...) @ssh_warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i32 0, i32 0), i8* %30)
  %43 = load i8*, i8** %3, align 8
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  %46 = icmp sge i32 %45, 48
  %69 = load i8*, i8** %2, align 8
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = load i8*, i8** %3, align 8
  %73 = load i8, i8* %72, align 1
  %74 = sext i8 %73 to i32
  %75 = icmp eq i32 %71, %74
  %78 = load i8*, i8** %2, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 1
  %80 = load i8*, i8** %3, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  %82 = call i32 @ssh_match_pattern(i8* %79, i8* %81)
  %144 = load i32, i32* %escaped, align 4
  %145 = icmp ne i32 %144, 0
  %49 = load i8*, i8** %3, align 8
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp sle i32 %51, 57
store i8* %65, i8** %s, align 8
store  i8* %67, i8** %pattern, align 8
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %escaped = alloca i32, align 4
  store i8* %s, i8** %2, align 8
  store i8* %pattern, i8** %3, align 8
  store i32 0, i32* %escaped, align 4
  store i32 0, i32* %escaped, align 4
  %6 = load i8*, i8** %3, align 8
  %7 = load i8, i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 0
  %63 = load i8*, i8** %2, align 8
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp ne i32 %65, 0
  %55 = phi i1 [ false, %42 ], [ %53, %48 ]
