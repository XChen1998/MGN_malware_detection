@ssh_mpk_karatsuba_mul_words = global i64 28, align 8
@ssh_mpk_karatsuba_square_words = global i64 20, align 8
  %74 = load i32, i32* %j, align 4
  %75 = sext i32 %74 to i64
  %76 = load i64*, i64** %__d, align 8
  %77 = getelementptr inbounds i64, i64* %76, i64 %75
  store i64 0, i64* %77, align 8
  %78 = load i32, i32* %j, align 4
  %79 = add nsw i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = load i64*, i64** %__d, align 8
  %82 = getelementptr inbounds i64, i64* %81, i64 %80
  store i64 0, i64* %82, align 8
  %85 = load i32, i32* %j, align 4
  %86 = sext i32 %85 to i64
  %87 = load i64*, i64** %__d, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 %86
  store i64 0, i64* %88, align 8
  %89 = load i32, i32* %j, align 4
  %90 = add nsw i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = load i64*, i64** %__d, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 %91
  store i64 0, i64* %93, align 8
  %94 = load i32, i32* %j, align 4
  %95 = add nsw i32 %94, 2
  %96 = sext i32 %95 to i64
  %97 = load i64*, i64** %__d, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 %96
  store i64 0, i64* %98, align 8
  %9 = load i64*, i64** %__d, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 0
  store i64 0, i64* %10, align 8
  %68 = load i32, i32* %j, align 4
  %69 = sext i32 %68 to i64
  %70 = load i64*, i64** %__d, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 %69
  store i64 0, i64* %71, align 8
  %36 = load i64, i64* %2, align 8
  %37 = lshr i64 %36, 8
  %38 = and i64 %37, 255
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* @ssh_mpk_count_leading_zeros.leading_zero_table, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = add nsw i32 16, %41
  store i32 %42, i32* %1, align 4
  %45 = load i64, i64* %2, align 8
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* @ssh_mpk_count_leading_zeros.leading_zero_table, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 24, %48
  store i32 %49, i32* %1, align 4
store i64* %86, i64** %d, align 8
store  i32 %87, i32* %len, align 8
  %1 = alloca i64*, align 8
  %2 = alloca i32, align 4
  %__d = alloca i64*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i64* %d, i64** %1, align 8
  store i32 %len, i32* %2, align 4
  %3 = load i64*, i64** %1, align 8
  store i64* %3, i64** %__d, align 8
  %4 = load i32, i32* %2, align 4
  switch i32 %4, label %21 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %9
    i32 3, label %14
  ]
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  store i64 %x, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 255
  %5 = icmp ne i64 %4, 0
  %8 = load i64, i64* %2, align 8
  %9 = lshr i64 %8, 0
  %10 = and i64 %9, 255
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* @ssh_mpk_count_trailing_zeros.trailing_zero_table, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = add nsw i32 0, %13
  store i32 %14, i32* %1, align 4
  %31 = load i64, i64* %2, align 8
  %32 = and i64 %31, 65280
  %33 = icmp ne i64 %32, 0
  %1 = alloca i32, align 4
  %2 = alloca i64*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  store i64* %op, i64** %2, align 8
  store i32 %op_n, i32* %3, align 4
  store i32 %bits, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp ne i32 %5, 0
  %11 = load i32, i32* %4, align 4
  switch i32 %11, label %112 [
    i32 0, label %12
    i32 1, label %13
    i32 2, label %46
    i32 3, label %79
  ]
