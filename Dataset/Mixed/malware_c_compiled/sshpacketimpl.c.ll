  %147 = load i64, i64* %payload_len, align 8
  %148 = add i64 4, %147
  %149 = load i64, i64* %offset, align 8
  %150 = add i64 %149, %148
  store i64 %150, i64* %offset, align 8
  %153 = load i64, i64* %offset, align 8
  %154 = icmp ugt i64 %153, 0
  %44 = load %struct.SshPacketImplRec*, %struct.SshPacketImplRec** %up, align 8
  %45 = getelementptr inbounds %struct.SshPacketImplRec, %struct.SshPacketImplRec* %44, i32 0, i32 9
  %46 = load %struct.SshStreamRec*, %struct.SshStreamRec** %45, align 8
  %47 = icmp ne %struct.SshStreamRec* %46, null
  %48 = xor i1 %47, true
  %51 = phi i1 [ false, %38 ], [ false, %32 ], [ false, %26 ], [ %49, %43 ]
  %121 = load %struct.SshPacketImplRec*, %struct.SshPacketImplRec** %up, align 8
  %122 = getelementptr inbounds %struct.SshPacketImplRec, %struct.SshPacketImplRec* %121, i32 0, i32 10
  %123 = load void (i32, i8*, i64, i8*)*, void (i32, i8*, i64, i8*)** %122, align 8
  %124 = icmp ne void (i32, i8*, i64, i8*)* %123, null
  %127 = load %struct.SshPacketImplRec*, %struct.SshPacketImplRec** %up, align 8
  %128 = getelementptr inbounds %struct.SshPacketImplRec, %struct.SshPacketImplRec* %127, i32 0, i32 10
  %129 = load void (i32, i8*, i64, i8*)*, void (i32, i8*, i64, i8*)** %128, align 8
  %130 = load i64, i64* %offset, align 8
  %131 = add i64 %130, 4
  %132 = load i8*, i8** %3, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 %131
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = load i8*, i8** %3, align 8
  %137 = load i64, i64* %offset, align 8
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  %139 = getelementptr inbounds i8, i8* %138, i64 5
  %140 = load i64, i64* %payload_len, align 8
  %141 = sub i64 %140, 1
  %142 = load %struct.SshPacketImplRec*, %struct.SshPacketImplRec** %up, align 8
  %143 = getelementptr inbounds %struct.SshPacketImplRec, %struct.SshPacketImplRec* %142, i32 0, i32 14
  %144 = load i8*, i8** %143, align 8
  call void %129(i32 %135, i8* %139, i64 %141, i8* %144)
  %157 = load i64, i64* %offset, align 8
  %158 = trunc i64 %157 to i32
  store i32 %158, i32* %1, align 4
  %66 = load %struct.SshPacketImplRec*, %struct.SshPacketImplRec** %up, align 8
  %67 = getelementptr inbounds %struct.SshPacketImplRec, %struct.SshPacketImplRec* %66, i32 0, i32 6
  %68 = call i64 @ssh_buffer_len(%struct.SshBuffer* %67)
  %71 = icmp eq i64 %69, 0
  %39 = load i64, i64* %offset, align 8
  %40 = load i64, i64* %4, align 8
  %41 = icmp ult i64 %39, %40
  %161 = load %struct.SshPacketImplRec*, %struct.SshPacketImplRec** %up, align 8
  %162 = getelementptr inbounds %struct.SshPacketImplRec, %struct.SshPacketImplRec* %161, i32 0, i32 3
  store i32 1, i32* %162, align 8
  store i32 -1, i32* %1, align 4
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %up = alloca %struct.SshPacketImplRec*, align 8
  %len = alloca i64, align 8
  store i8* %context, i8** %2, align 8
  store i8* %buf, i8** %3, align 8
  store i64 %size, i64* %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to %struct.SshPacketImplRec*
  store %struct.SshPacketImplRec* %6, %struct.SshPacketImplRec** %up, align 8
  %7 = load %struct.SshPacketImplRec*, %struct.SshPacketImplRec** %up, align 8
  %8 = getelementptr inbounds %struct.SshPacketImplRec, %struct.SshPacketImplRec* %7, i32 0, i32 6
  %9 = call i64 @ssh_buffer_len(%struct.SshBuffer* %8)
  store i64 %10, i64* %len, align 8
  %12 = load i64, i64* %len, align 8
  %13 = load i64, i64* %4, align 8
  %14 = icmp ugt i64 %12, %13
  %61 = load %struct.SshPacketImplRec*, %struct.SshPacketImplRec** %up, align 8
  %62 = getelementptr inbounds %struct.SshPacketImplRec, %struct.SshPacketImplRec* %61, i32 0, i32 6
  %63 = load i64, i64* %len, align 8
  call void @ssh_buffer_consume(%struct.SshBuffer* %62, i64 %63)
  %165 = phi i64 [ %119, %115 ], [ %76, %72 ], [ %65, %61 ]
  store i64 %165, i64* %len, align 8
  %166 = load i64, i64* %len, align 8
  %167 = icmp ult i64 %166, 4
  %179 = load i64, i64* %4, align 8
  %180 = load i64, i64* %offset, align 8
  %181 = sub i64 %179, %180
  store i64 %181, i64* %len, align 8
