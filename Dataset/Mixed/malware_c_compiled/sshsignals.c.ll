@eloop_used_in_signals = internal global i32 0, align 4
@original_core_limit = internal global i64 0, align 8
@stderr = external global %struct._IO_FILE*, align 8
  store i32 0, i32* %1, align 4
  store i32 1, i32* %1, align 4
  %34 = load i64, i64* @original_core_limit, align 8
  %35 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rl, i32 0, i32 0
  store i64 %34, i64* %35, align 8
  %36 = call i32 @setrlimit(i32 4, %struct.rlimit* %rl) #5
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %sig = alloca i32, align 4
  %rl = alloca %struct.rlimit, align 8
  store i32 %use_eloop, i32* %1, align 4
  store i8* %ctx, i8** %2, align 8
  %3 = load i32, i32* %1, align 4
  store i32 %3, i32* @eloop_used_in_signals, align 4
  store i32 1, i32* %sig, align 4
  %6 = load i32, i32* %sig, align 4
  %7 = icmp sle i32 %6, 65
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 %sig, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %5 [
    i32 19, label %4
    i32 20, label %4
    i32 18, label %4
    i32 17, label %4
    i32 21, label %4
    i32 22, label %4
    i32 29, label %4
    i32 23, label %4
    i32 28, label %4
  ]
