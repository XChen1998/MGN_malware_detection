@get_rip_label = external global i64, align 8
  %136 = load i32, i32* %i, align 4
  %137 = sext i32 %136 to i64
  %138 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %phdr, align 8
  %139 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %138, i64 %137
  %140 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %139, i32 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 1
  %164 = load i32, i32* %i, align 4
  %165 = sext i32 %164 to i64
  %166 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %phdr, align 8
  %167 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %166, i64 %165
  %168 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %167, i32 0, i32 7
  store i64 4096, i64* %168, align 8
  %166 = load i32, i32* %1, align 4
store i8* %7, i8** %path, align 8
store  i64 0, i64* %flags, align 8
store  i64 0, i64* %mode, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store i8* %path, i8** %1, align 8
  store i64 %flags, i64* %2, align 8
  store i64 %mode, i64* %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load i64, i64* %2, align 8
  %6 = load i64, i64* %3, align 8
  call void asm sideeffect "mov $0, %rdi\0Amov $1, %rsi\0Amov $2, %rdx\0Amov $$2, %rax\0Asyscall", "imr,imr,imr,~{dirflag},~{fpsr},~{flags}"(i8* %4, i64 %5, i64 %6) #3, !srcloc !1
  %9 = call i64 asm "mov %rax, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !3
  %76 = load i32, i32* %i, align 4
  %77 = sext i32 %76 to i64
  %78 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %phdr, align 8
  %79 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %78, i64 %77
  %80 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 5
  %173 = load i32, i32* %i, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %i, align 4
  %177 = load i32, i32* %text_found, align 4
  %178 = icmp ne i32 %177, 0
