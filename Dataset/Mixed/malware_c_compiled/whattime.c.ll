@sprint_uptime.utmp_fd = internal global i32 -1, align 4
@buf = internal global [128 x i8] zeroinitializer, align 16
@stderr = external global %struct._IO_FILE*, align 8
@av = common global [3 x double] zeroinitializer, align 16
  %179 = load i32, i32* %pos, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @buf, i32 0, i32 0), i64 %180
  %182 = load i32, i32* %numuser, align 4
  %183 = load i32, i32* %numuser, align 4
  %184 = icmp eq i32 %183, 1
  %185 = select i1 %184, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0)
  %186 = call i32 (i8*, i8*, ...) @sprintf(i8* %181, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i32 %182, i8* %185) #5
  %189 = load i32, i32* %pos, align 4
  %190 = add nsw i32 %189, %187
  store i32 %190, i32* %pos, align 4
  call void @loadavg(double* getelementptr inbounds ([3 x double], [3 x double]* @av, i64 0, i64 0), double* getelementptr inbounds ([3 x double], [3 x double]* @av, i64 0, i64 1), double* getelementptr inbounds ([3 x double], [3 x double]* @av, i64 0, i64 2))
  %104 = load i32, i32* @sprint_uptime.utmp_fd, align 4
  %105 = icmp slt i32 %104, 0
  %108 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i32 0)
  %174 = load i32, i32* @sprint_uptime.utmp_fd, align 4
  %175 = bitcast %struct.utmp* %utmpstruct to i8*
  %176 = call i64 @read(i32 %174, i8* %175, i64 384)
  %utmpstruct = alloca %struct.utmp, align 4
  %upminutes = alloca i32, align 4
  %uphours = alloca i32, align 4
  %updays = alloca i32, align 4
  %nread = alloca i32, align 4
  %pos = alloca i32, align 4
  %realtime = alloca %struct.tm*, align 8
  %realseconds = alloca i64, align 8
  %numuser = alloca i32, align 4
  %uptime_secs = alloca double, align 8
  %idle_secs = alloca double, align 8
  %1 = call i64 @time(i64* %realseconds) #4
  %4 = call %struct.tm* @localtime(i64* %realseconds) #5
  %100 = load i32, i32* %pos, align 4
  %101 = add nsw i32 %100, %98
  store i32 %101, i32* %pos, align 4
