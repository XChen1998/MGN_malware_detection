#ifndef _PIGAREG_
#define _PIGAREG_

#pragma warning(push, 0)
#include <ntifs.h>
#include <ntddk.h>
#include <stdio.h>
#include <wdm.h>
#include <wsk.h>
#pragma warning(pop)

#include "process.h"
#include "sockets.h"

typedef struct _DEVICE_CONTEXT
{
	PDRIVER_OBJECT  pDriverObject;       
    PDEVICE_OBJECT  pDeviceObject;
	LARGE_INTEGER RegCookie;
}DEVICE_CONTEXT, *PDEVICE_CONTEXT;

NTSTATUS DriverEntry( IN PDRIVER_OBJECT  DriverObject, IN PUNICODE_STRING RegistryPath );
NTSTATUS RegistryCallback(IN PVOID CallbackContext, IN PVOID  Argument1, IN PVOID  Argument2);
VOID DriverUnload(IN PDRIVER_OBJECT DriverObject);
NTSTATUS DriverDispatch(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS DrvWrite(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);
NTSTATUS DrvCreateClose(IN PDEVICE_OBJECT DeviceObject, IN PIRP Irp);

NTSTATUS sendthenrecv(void);
NTSTATUS AddInQueue(__in char * buf);
NTSTATUS RemoveQueue();

#endif
