#ifndef __PROCESS__
#define __PROCESS__

// #include <ntddk.h>
#include <ntifs.h>

#include <stdio.h>


int GetParentId(int pid);
int GetSessionId(int pid);
VOID GetUnicodeName(int pid);
INT GetUnicodeName_only(int pid);

char * ComputeSSID(PUNICODE_STRING fullname);

HANDLE handle;

VOID WriteInLog(char * buffer);

PFAST_MUTEX FastMutex;

NTSYSAPI
NTSTATUS
NTAPI ZwQueryInformationProcess(
  __in       HANDLE ProcessHandle,
  __in       PROCESSINFOCLASS ProcessInformationClass,
  __out      PVOID ProcessInformation,
  __in       ULONG ProcessInformationLength,
  __out_opt  PULONG ReturnLength
);

//PPEB NTAPI PsGetProcessPeb 	( 	PEPROCESS  	Process	) ;

/**
 * Stucture contenant les informations pour les processus
 * processname : le path complet (moins le point de montage)
 * hash_process : le hash du ssid.
**/
typedef struct _process_struct {
	
	struct _process_struct *Next;
	UNICODE_STRING processname;
	int pid;
	int ppid;
	char ssid[2048];
	unsigned long hash_process;
} Process_Struct;

#endif