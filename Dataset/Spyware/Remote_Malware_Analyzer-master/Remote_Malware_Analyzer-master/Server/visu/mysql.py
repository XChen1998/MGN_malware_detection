import MySQLdb as mysql
import json
import collections

class dbconfig:
    database        =       'sandbox'        # Database to connect to. Please use an empty database for best results.
    user            =       'sandbox'      # User ID to connect with
    password        =       'azerty'      # Password for given User ID
    hostname        =       'localhost'     # Hostname
    port            =        3306           # Port Number


class dbinterface:

    def __init__(self, dbconfig):
        self.dbconfig = dbconfig
        try:
                self.conn = mysql.connect (host = self.dbconfig.hostname,db=self.dbconfig.database, user = self.dbconfig.user, passwd = self.dbconfig.password )
        except:
                print("Connexion failed: toto")
 
 
    def PrintProcess(self, run):
        fichier = open("flare.json", "w")
        cursor = self.conn.cursor()
        insertLine = "SELECT pid,name,ppid FROM process WHERE run=%i "%(int(run))
        cursor.execute(insertLine)
        rows = cursor.fetchall()
        liste_json= []
        liste = []
        p = collections.OrderedDict()
        for row in  rows:
            boolean=0
            for l in liste:
                if l == row[0]:
                   boolean=1
                   continue
            if boolean ==1:
               break
            d = collections.OrderedDict()
            liste_temp = []
            liste.append(row[0])
            self.FindFils(liste,rows, row, liste_temp,run)
            s= row[1].split('\\')
            test = s[len(s)-1]
            d["name"]=test        
            d["children"] = liste_temp
            liste_json.append(d)
          #  print json.dumps(liste_json)
  
        liste_faked = []
        p["name"]="Faked"           
        p["children"] = liste_json
        liste_faked.append(p)
        s=json.dumps(liste_faked, indent=4)
        fichier.write(s)
      #  print len(liste)
      #  print liste
      #  print s
        fichier.close()
        cursor.close()

    def FindFils(self, liste, rows, row, liste_tmp, run):
         for raw in rows:
            boolean =0
            if row[0] == raw[2]:
                for l in liste:
                   if l == raw[0]:
                      boolean=1
                      break
                if boolean ==1:
                    break   
                liste.append(raw[0])
                liste_tempo=[]
                self.FindFils(liste,rows, raw, liste_tempo, run)
                self.AddAction(raw[0], liste_tempo, run)
                d = collections.OrderedDict()
                s= raw[1].split('\\')
                test = s[len(s)-1]
                d["name"]=test   
                d["children"] = liste_tempo
                liste_tmp.append(d)

    def AddAction(self, pid, liste,run):
        cursor = self.conn.cursor()
        #insertLine = "SELECT pid,action,objet FROM action WHERE run=%i and pid=%i and (action='write' or action='load' or action='unlink') "%(int(run), int(pid))
        insertLine = "SELECT DISTINCT objet FROM action WHERE run=%i and pid=%i and (action='write') "%(int(run), int(pid))
        cursor.execute(insertLine)
        rows = cursor.fetchall()
        print rows
        liste_temporaire = []
        p = collections.OrderedDict()
        if len(rows) != 0:
          for r in rows:
              d = collections.OrderedDict()
              d["name"]=r
              liste_temporaire.append(d)

          p["name"]="write"   
          p["children"] = liste_temporaire
          liste.append(p)
  
        insertLine = "SELECT DISTINCT objet FROM action WHERE run=%i and pid=%i and (action='load') "%(int(run), int(pid))
        cursor.execute(insertLine)
        rows = cursor.fetchall()
        print rows
        liste_temporaire = []
        p = collections.OrderedDict()
        if len(rows) != 0:
          for r in rows:
              d = collections.OrderedDict()
              d["name"]=r
              liste_temporaire.append(d)

          p["name"]="load"   
          p["children"] = liste_temporaire
          liste.append(p)
                    
        insertLine = "SELECT DISTINCT objet FROM action WHERE run=%i and pid=%i and (action='unlink') "%(int(run), int(pid))
        cursor.execute(insertLine)
        rows = cursor.fetchall()
        print rows
        liste_temporaire = []
        p = collections.OrderedDict()
        if len(rows) != 0:
          for r in rows:
              d = collections.OrderedDict()
              d["name"]=r
              liste_temporaire.append(d)

          p["name"]="unlink"   
          p["children"] = liste_temporaire
          liste.append(p)
         
        cursor.close()
        


