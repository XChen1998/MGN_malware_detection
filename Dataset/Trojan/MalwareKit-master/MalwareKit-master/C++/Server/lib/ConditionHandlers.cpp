#include <Windows.h>
#include <strsafe.h>
#include "ConditionHandlers.h"

#pragma comment(lib, "shell32.lib")

// old selfDelete that seemed to stop working
// bool selfDelete()
// {
//   TCHAR szFile[1024], szCmd[1024];
//   if((GetModuleFileName(0,szFile,MAX_PATH)!=0) &&
//      (GetShortPathName(szFile,szFile,MAX_PATH)!=0))
//   {
//     lstrcpy(szCmd,"/c del ");
//     lstrcat(szCmd,szFile);
//     lstrcat(szCmd," >> NUL");
//     if((GetEnvironmentVariable("ComSpec",szFile,MAX_PATH)!=0) &&
//        ((int)ShellExecute(0,0,szFile,szCmd,0,SW_HIDE)>32))
//        return TRUE;
//   }
//   return FALSE;
// }

bool selfDelete()
{
    TCHAR szModuleName[MAX_PATH];
    TCHAR szCmd[2 * MAX_PATH];
    STARTUPINFO si = {0};
    PROCESS_INFORMATION pi = {0};

    GetModuleFileName(NULL, szModuleName, MAX_PATH);

    StringCbPrintf(szCmd, 2 * MAX_PATH, "cmd.exe /C ping 1.1.1.1 -n 1 -w 3000 > Nul & Del \"%s\"", szModuleName);

    CreateProcess(NULL, szCmd, NULL, NULL, FALSE, CREATE_NO_WINDOW, NULL, NULL, &si, &pi);

    CloseHandle(pi.hThread);
    CloseHandle(pi.hProcess);
    return true;
}

void killProcess(){
  exit(0);
}
