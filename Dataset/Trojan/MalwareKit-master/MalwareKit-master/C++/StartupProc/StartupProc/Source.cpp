#include <windows.h>
#include <iostream>
#include <string>
#include <wchar.h>
#include <tchar.h>
#pragma comment(lib, "advapi32")

using namespace std;

#define RUN_KEY "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"

<<<<<<< HEAD
int addRunEntry();

int main()
{
	//cout << pBuf << "   " << endl;
=======
int addRunEntry()

int main()
{
>>>>>>> 1cdb84c16535f05484fe6a932c7db8d65d8ea232
	addRunEntry();
	cin.get();
	cin.get();
	return 0;
}

int addRunEntry()
{
	CHAR path[MAX_PATH];
	int bytes = GetModuleFileNameA(NULL, path, MAX_PATH);
<<<<<<< HEAD
	TCHAR szPath[MAX_PATH];
	DWORD pathLen = 0;

=======
>>>>>>> 1cdb84c16535f05484fe6a932c7db8d65d8ea232
	int size = strlen(path) + 1;
	HKEY newValue;
<<<<<<< HEAD

	if (RegOpenKey(HKEY_CURRENT_USER,TEXT("Software\\Microsoft\\Windows\\CurrentVersion\\Run"),&newValue) != ERROR_SUCCESS) {return -1;}
	DWORD pathLenInBytes = pathLen * sizeof(*szPath);
	if (RegSetValueEx(newValue,TEXT("mu_service"),0,REG_SZ,(LPBYTE)szPath,pathLenInBytes) != ERROR_SUCCESS){
=======
	if (RegOpenKey(HKEY_CURRENT_USER, TEXT(RUN_KEY), &newValue) != ERROR_SUCCESS) { return -1; }
	if (RegSetValueEx(newValue, TEXT("my_service"), 0, REG_SZ, (LPBYTE)path, MAX_PATH) != ERROR_SUCCESS) {
>>>>>>> 1cdb84c16535f05484fe6a932c7db8d65d8ea232
		RegCloseKey(newValue);
		return -1;
	}
	RegCloseKey(newValue);
	return TRUE;
}
