#include <windows.h>
#include <String>
#include <malloc.h>
#include <stdio.h>
#include <iostream>
using namespace std;

HKEY hKey;
DWORD buffer;
LONG result;
unsigned long type = REG_DWORD, size = 1024;

bool doesRegistryExist(const char* registry){

	//char * to string
	string res = registry;
	WSTR reg = s2ws(res);
	//string to wstring
	result = RegOpenKeyEx(HKEY_CURRENT_USER, reg, 0, KEY_READ, &hKey);
	if (result == ERROR_SUCCESS)
	{
		//RegQueryValueEx(hKey, L"Hidden", NULL, &type, (LPBYTE)&buffer, &size);
		RegCloseKey(hKey);
		//printf("The value is :%d\n", buffer);
		return true;
	}
	else{
		return false;
	}
}

string checkRegistry(const char* registry){
	bool exists = doesRegistryExist(registry);
	string res = registry;
	if (exists){
		return res.append(":True");
	}
	else{
		return res.append(":False");
	}
}

int main()
{
	string res = checkRegistry("Software\\7-Zip");
	//add key 'registry'
	//append value to array registry result
	cout << res;
	int hello;
	cin >> hello;
	return 0;
}
