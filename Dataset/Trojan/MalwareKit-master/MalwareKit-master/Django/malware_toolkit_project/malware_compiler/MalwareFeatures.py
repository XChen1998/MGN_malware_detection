class MalwareFeature:
    'Base class for malware features'


    def __init__(self):
        self.global_vars = []
        self.imports = []
        self.func_decl = []
        self.func_def = []
        self.body = []
        self.priority = 0
        self.name = ""
        pass

    def get_imports(self):
        return self.imports

    def get_func_declarations(self):
        return self.func_decl

    def get_func_definitions(self):
        return self.func_def

    def get_global_variables(self):
        return self.global_vars

    def get_feat_body(self):
        return self.body

    def get_priority(self):
        return self.priority

    def get_name(self):
        return self.name

    # all of the add functions can take a list or a single line of text
    # if it is a list, the function will iterate over each line and add
    # them to the class's list of lines
    def add_imports(self, imports):
        # its a list so add each line independently
        if isinstance(imports, list):
            for line in imports:
                self.imports.append(line)
        # its just a single line so add it
        else:
            self.imports.append(imports)

    def add_func_declarations(self, dec):
        # its a list so add each line independently
        if isinstance(dec, list):
            for line in dec:
                self.func_decl.append(line)
        # its just a single line so add it
        else:
            self.func_decl.append(dec)

    def add_func_definitions(self, definition):
        func = []
        # its a list so add each line independently
        if isinstance(definition, list):
            for line in definition:
                func.append(line)
                # self.func_def.append(line)
        # its just a single line so add it
        else:
            func.append(definition)
            # self.func_def.append(definition)
        self.func_def.append(func)

    def add_global_variables(self, vars):
        # its a list so add each line independently
        if isinstance(vars, list):
            for line in vars:
                self.global_vars.append(line)
        # its just a single line so add it
        else:
            self.global_vars.append(vars)

    def add_feat_body(self, body):
        # its a list so add each line independently
        if isinstance(body, list):
            for line in body:
                self.body.append(line)
        # its just a single line so add it
        else:
            self.body.append(body)

    def set_feat_priority(self, priority):
        self.priority = priority

    def set_feat_name(self, name):
        self.name = name
