import MalwareFeatures

class SourceCode:
    'Class for source code'

    # list of imports this program will use
    imports = ['#include <stdio.h>']
    # list of function declarations
    func_decls = []
    # list of function definitions
    func_defs = []
    # list of global variable strings
    global_vars = []
    # list of lines in the main body of the source code
    main = []

    def __init__(self):
        pass

    # adds a function declaration
    # declarationa - a function declaration
    def add_func_declaration(self, declaration):
        self.func_decls.append(declaration)

    # adds a function definition
    # definitions - a function's source code
    def add_func_definition(self, definition):
        self.func_defs.append(definition)

    # adds a global variable to the source code
    def add_global_variable(self, g_var):
        self.global_vars.append(g_var)

    # adds the function call to main()
    # line - the function call as it would appear in the body
    def add_line_to_main(self, line):
        self.main.append(line)

    # prepares a source code for a .cpp file for compiling
    def export_code(self, filename):
        source_file = open(filename, 'w')
        # write imports to file
        for i in self.imports:
            source_file.write(i)
        source_file.write('\r\n')
        # write function headers to file
        for d in self.func_decls:
            source_file.write(d)
        source_file.write('\r\n')

        # write global variable declarations to file
        for v in self.global_vars:
            source_file.write(v + '\r\n')

        # write the main function to file
        source_file.write('int main(){\r\n')
        for m in self.main:
            source_file.write(m + '\r\n')
        source_file.write('}\r\n')

        # write function definitions to file
        for d in self.func_defs:
            source_file.write(d + '\r\n')
        source_file.close()
